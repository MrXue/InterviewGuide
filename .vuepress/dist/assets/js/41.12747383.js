(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{456:function(t,_,v){"use strict";v.r(_);var a=v(62),r=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{align:"center"}},[t._v("计算机网络")]),t._v(" "),v("p",{attrs:{id:"偶爱死的七层模型分别是各自的功能是什么"}}),t._v(" "),v("div",{staticStyle:{"border-color":"#24C6DC","background-color":"#e9f9f3",margin:"1rem 0",padding:".25rem 1rem","border-left-width":".3rem","border-left-style":"solid","border-radius":".5rem",color:"inherit"}},[v("p",[t._v("这是六则或许对你有些许帮助的信息:")]),t._v(" "),v("p",[t._v("⭐️1、阿秀与朋友合作开发了一个"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("编程资源网站")]),t._v("，目前已经收录了很多不错的学习资源和黑科技（附带下载地址），如过你想要寻求合适的编程资源，"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://tools.interviewguide.cn/home",target:"_blank"}},[t._v("欢迎体验")]),t._v("以及推荐自己认为不错的资源，众人拾柴火焰高，我为人人，人人为我🔥！")]),t._v(" "),v("p",[t._v("2、👉23年5月份阿秀从"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzk0ODU4MzEzMw==&mid=2247512170&idx=1&sn=c4a04a383d2dfdece676b75f17224e78",target:"_blank"}},[t._v("字节跳动离职跳槽到某外企")]),t._v("期间，为"),v("span",{staticStyle:{"font-weight":"bold"}},[t._v("方便自己找工作，增加上岸几率")]),t._v("，我自己从0开发了一个"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("互联网中大厂面试真题解析网站")]),t._v("，包括两个前端和一个后端。能够定向查看某些公司的某些岗位面试真题，比如我想查一下行业为互联网，公司为字节跳动，考察岗位为后端，考察时间为最近一年之类的面试题有哪些？\n")]),v("div",{attrs:{align:"center"}}),t._v("网站地址："),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://top.interviewguide.cn/",target:"_blank"}},[t._v("InterviewGuide大厂面试真题解析网站")]),t._v("。点此可以查看该网站的视频介绍："),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.bilibili.com/video/BV1f94y1C7BL",target:"_blank"}},[t._v("B站视频讲解")]),t._v("   如果可以的话求个B站三连，感谢！\n  "),v("p"),t._v("3、😊\n    分享一个学弟发给我的"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("20T网盘资源合集")]),t._v("，"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://docs.qq.com/sheet/DY3VPVklVaFFMcUZ4?tab=9h5afr",target:"_blank"}},[t._v("点此白嫖")]),t._v("，主要是各类高清影视、电视剧、音乐、副业、纪录片、英语四六级考试、考研考公等资源。\n  "),v("p"),t._v(" "),v("p",[t._v("4、😍免费分享阿秀个人学习计算机以来收集到的免费学习资源，"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/01-free/01-introduce.html",target:"_blank"}},[t._v("点此白嫖")]),t._v("；也记录一下自己以前买过的"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")]),t._v("；也记录一下自己以前买过的"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")])]),t._v(" "),v("p",[t._v("5、🚀如果你想在校招中顺利拿到更好的offer，阿秀建议你多看看前人"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("踩过的坑")]),t._v("和"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{target:"_blank",href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp"}},[t._v("留下的经验")]),t._v("，事实上你现在遇到的大多数问题你的学长学姐师兄师姐基本都已经遇到过了。\n  ")]),t._v(" "),v("p",[t._v("6、🔥 欢迎准备计算机校招的小伙伴加入我的"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/xg0otqvc17wfx4u9",target:"_blank"}},[t._v("学习圈子")]),t._v("，一个人踽踽独行不如一群人报团取暖，圈子里沉淀了很多过去21/22/23届学长学姐的"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp",target:"_blank"}},[t._v("经验和总结")]),t._v("，好好跟着走下去的，最后基本都可以拿到不错的offer！此外，每周都会进行"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("精华总结和分享！")]),t._v("如果你需要《阿秀的学习笔记》网站中📚︎校招八股文相关知识点的PDF版本的话，可以"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/qs0yn66apvkzw0ps",target:"_blank"}},[t._v("点此下载")]),t._v(" 。")])]),t._v(" "),v("p",{attrs:{id:"为何快速重传是选择次"}}),t._v(" "),v("h2",{attrs:{id:"_80、为何快速重传是选择3次ack"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_80、为何快速重传是选择3次ack"}},[t._v("#")]),t._v(" 80、为何快速重传是选择3次ACK？")]),t._v(" "),v("p",[t._v("主要的考虑还是要区分包的丢失是由于链路故障还是乱序等其他因素引发。")]),t._v(" "),v("p",[t._v("两次duplicated ACK时很可能是乱序造成的！三次duplicated ACK时很可能是丢包造成的！四次duplicated ACK更更更可能是丢包造成的，但是这样的响应策略太慢。丢包肯定会造成三次duplicated ACK!综上是选择收到三个重复确认时窗口减半效果最好，这是实践经验。")]),t._v(" "),v("p",[t._v("在没有fast retransmit / recovery 算法之前，重传依靠发送方的retransmit timeout，就是在timeout内如果没有接收到对方的ACK，默认包丢了，发送方就重传，包的丢失原因。")]),t._v(" "),v("p",[t._v("1）包checksum 出错")]),t._v(" "),v("p",[t._v("2）网络拥塞")]),t._v(" "),v("p",[t._v("3）网络断，包括路由重收敛，但是发送方无法判断是哪一种情况，于是采用最笨的办法，就是将自己的发送速率减半，即CWND 减为1/2，这样的方法对2是有效的，可以缓解网络拥塞，3则无所谓，反正网络断了，无论发快发慢都会被丢；但对于1来说，丢包是因为偶尔的出错引起，一丢包就对半减速不合理。")]),t._v(" "),v("p",[t._v("于是有了fast retransmit 算法，基于在反向还可以接收到ACK，可以认为网络并没有断，否则也接收不到ACK，如果在timeout 时间内没有接收到> 2 的duplicated ACK，则概率大事件为乱序，乱序无需重传，接收方会进行排序工作；")]),t._v(" "),v("p",[t._v("而如果接收到三个或三个以上的duplicated ACK，则大概率是丢包，可以逻辑推理，发送方可以接收ACK，则网络是通的，可能是1、2造成的，先不降速，重传一次，如果接收到正确的ACK，则一切OK，流速依然（包出错被丢）。")]),t._v(" "),v("p",[t._v("而如果依然接收到duplicated ACK，则认为是网络拥塞造成的，此时降速则比较合理。")]),t._v(" "),v("p",{attrs:{id:"对于番外特状态你知道多少"}}),t._v(" "),v("h2",{attrs:{id:"_81、对于fin-wait-2-close-wait状态和time-wait状态-你知道多少"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_81、对于fin-wait-2-close-wait状态和time-wait状态-你知道多少"}},[t._v("#")]),t._v(" 81、对于FIN_WAIT_2，CLOSE_WAIT状态和TIME_WAIT状态？你知道多少?")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("FIN_WAIT_2：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("半关闭状态。")])]),t._v(" "),v("li",[v("p",[t._v("发送断开请求一方还有接收数据能力，但已经没有发送数据能力。")])])])]),t._v(" "),v("li",[v("p",[t._v("CLOSE_WAIT状态：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("被动关闭连接一方接收到FIN包会立即回应ACK包表示已接收到断开请求。")])]),t._v(" "),v("li",[v("p",[t._v("被动关闭连接一方如果还有剩余数据要发送就会进入CLOSE_WAIT状态。")])])])]),t._v(" "),v("li",[v("p",[t._v("TIME_WAIT状态：")]),t._v(" "),v("ul",[v("li",[t._v("又叫2MSL等待状态。")]),t._v(" "),v("li",[t._v("如果客户端直接进入CLOSED状态，如果服务端没有接收到最后一次ACK包会在超时之后重新再发FIN包，此时因为客户端已经CLOSED，所以服务端就不会收到ACK而是收到RST。所以TIME_WAIT状态目的是防止最后一次握手数据没有到达对方而触发重传FIN准备的。")]),t._v(" "),v("li",[t._v("在2MSL时间内，同一个socket不能再被使用，否则有可能会和旧连接数据混淆（如果新连接和旧连接的socket相同的话）。")])]),t._v(" "),v("blockquote",[v("p",[t._v("感谢网友指出笔误，已勘误-2021.11.16 https://github.com/forthespada/InterviewGuide/issues/23")])])])]),t._v(" "),v("p",{attrs:{id:"你了解流量控制原理吗"}}),t._v(" "),v("h2",{attrs:{id:"_82、你了解流量控制原理吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_82、你了解流量控制原理吗"}},[t._v("#")]),t._v(" 82、你了解流量控制原理吗？")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("目的是接收方通过TCP头窗口字段告知发送方本方可接收的最大数据量，用以解决发送速率过快导致接收方不能接收的问题。所以流量控制是点对点控制。")])]),t._v(" "),v("li",[v("p",[t._v("TCP是双工协议，双方可以同时通信，所以发送方接收方各自维护一个发送窗和接收窗。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("发送窗：用来限制发送方可以发送的数据大小，其中发送窗口的大小由接收端返回的TCP报文段中窗口字段来控制，接收方通过此字段告知发送方自己的缓冲（受系统、硬件等限制）大小。")])]),t._v(" "),v("li",[v("p",[t._v("接收窗：用来标记可以接收的数据大小。")])])])]),t._v(" "),v("li",[v("p",[t._v("TCP是流数据，发送出去的数据流可以被分为以下四部分：已发送且被确认部分 | 已发送未被确认部分 | 未发送但可发送部分 | 不可发送部分，其中发送窗 = 已发送未确认部分 + 未发但可发送部分。接收到的数据流可分为：已接收 | 未接收但准备接收 | 未接收不准备接收。接收窗 = 未接收但准备接收部分。")])]),t._v(" "),v("li",[v("p",[t._v("发送窗内数据只有当接收到接收端某段发送数据的ACK响应时才移动发送窗，左边缘紧贴刚被确认的数据。接收窗也只有接收到数据且最左侧连续时才移动接收窗口。")])])]),t._v(" "),v("p",{attrs:{id:"建立服务器的各个系统调用过程是怎样的"}}),t._v(" "),v("h2",{attrs:{id:"_83、建立tcp服务器的各个系统调用过程是怎样的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_83、建立tcp服务器的各个系统调用过程是怎样的"}},[t._v("#")]),t._v(" 83、建立TCP服务器的各个系统调用过程是怎样的？")]),t._v(" "),v("p",[v("img",{attrs:{src:"http://oss.interviewguide.cn/img/202205220023934.png",alt:""}})]),t._v(" "),v("p",[v("img",{attrs:{src:"http://oss.interviewguide.cn/img/202205220023348.png",alt:""}})]),t._v(" "),v("ul",[v("li",[v("p",[t._v("服务器：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("创建socket -> int socket(int domain, int type, int protocol);")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("domain：协议域，决定了socket的地址类型，IPv4为AF_INET。")])]),t._v(" "),v("li",[v("p",[t._v("type：指定socket类型，SOCK_STREAM为TCP连接。")])]),t._v(" "),v("li",[v("p",[t._v("protocol：指定协议。IPPROTO_TCP表示TCP协议，为0时自动选择type默认协议。")])])])]),t._v(" "),v("li",[v("p",[t._v("绑定socket和端口号 -> int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("sockfd：socket返回的套接字描述符，类似于文件描述符fd。")])]),t._v(" "),v("li",[v("p",[t._v("addr：有个sockaddr类型数据的指针，指向的是被绑定结构变量。")])])]),t._v(" "),v("div",{staticClass:"language-C++ extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("    // IPv4的sockaddr地址结构\n    struct sockaddr_in {\n        sa_family_t sin_family;    // 协议类型，AF_INET\n        in_port_t sin_port;    // 端口号\n        struct in_addr sin_addr;    // IP地址\n    };\n    struct in_addr {\n        uint32_t s_addr;\n    }\n")])])]),v("ul",[v("li",[t._v("addrlen：地址长度。")])])]),t._v(" "),v("li",[v("p",[t._v("监听端口号 -> int listen(int sockfd, int backlog);")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("sockfd：要监听的sock描述字。")])]),t._v(" "),v("li",[v("p",[t._v("backlog：socket可以排队的最大连接数。")])])])]),t._v(" "),v("li",[v("p",[t._v("接收用户请求 -> int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("sockfd：服务器socket描述字。")])]),t._v(" "),v("li",[v("p",[t._v("addr：指向地址结构指针。")])]),t._v(" "),v("li",[v("p",[t._v("addrlen：协议地址长度。")])]),t._v(" "),v("li",[v("p",[t._v("注：一旦accept某个客户机请求成功将返回一个全新的描述符用于标识具体客户的TCP连接。")])])])]),t._v(" "),v("li",[v("p",[t._v("从socket中读取字符 -> ssize_t read(int fd, void *buf, size_t count);")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("fd：连接描述字。")])]),t._v(" "),v("li",[v("p",[t._v("buf：缓冲区buf。")])]),t._v(" "),v("li",[v("p",[t._v("count：缓冲区长度。")])]),t._v(" "),v("li",[v("p",[t._v("注：大于0表示读取的字节数，返回0表示文件读取结束，小于0表示发生错误。")])])])]),t._v(" "),v("li",[v("p",[t._v("关闭socket -> int close(int fd);")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("fd：accept返回的连接描述字，每个连接有一个，生命周期为连接周期。")])]),t._v(" "),v("li",[v("p",[t._v("注：sockfd是监听描述字，一个服务器只有一个，用于监听是否有连接；fd是连接描述字，用于每个连接的操作。")])])])])])]),t._v(" "),v("li",[v("p",[t._v("客户机：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("创建socket -> int socket(int domain, int type, int protocol);")])]),t._v(" "),v("li",[v("p",[t._v("连接指定计算机 -> int connect(int sockfd, struct sockaddr* addr, socklen_t addrlen);")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("sockfd客户端的sock描述字。")])]),t._v(" "),v("li",[v("p",[t._v("addr：服务器的地址。")])]),t._v(" "),v("li",[v("p",[t._v("addrlen：socket地址长度。")])])])]),t._v(" "),v("li",[v("p",[t._v("向socket写入信息 -> ssize_t write(int fd, const void *buf, size_t count);")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("fd、buf、count：同read中意义。")])]),t._v(" "),v("li",[v("p",[t._v("大于0表示写了部分或全部数据，小于0表示出错。")])])])]),t._v(" "),v("li",[v("p",[t._v("关闭oscket -> int close(int fd);")]),t._v(" "),v("ul",[v("li",[t._v("fd：同服务器端fd。")])])])])])]),t._v(" "),v("p",{attrs:{id:"体系屁协议如何保证可靠传输"}}),t._v(" "),v("h2",{attrs:{id:"_84、tcp-协议如何保证可靠传输"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_84、tcp-协议如何保证可靠传输"}},[t._v("#")]),t._v(" 84、TCP 协议如何保证可靠传输？")]),t._v(" "),v("h3",{attrs:{id:"第一种回答"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一种回答"}},[t._v("#")]),t._v(" 第一种回答")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("确认和重传")]),t._v("：接收方收到报文就会确认，发送方发送一段时间后没有收到确认就会重传。")]),t._v(" "),v("li",[v("strong",[t._v("数据校验")]),t._v("：TCP报文头有校验和，用于校验报文是否损坏。")]),t._v(" "),v("li",[v("strong",[t._v("数据合理分片和排序")]),t._v("：tcp会按最大传输单元(MTU)合理分片，接收方会缓存未按序到达的数据，重新排序后交给应用层。而UDP：IP数据报大于1500字节，大于MTU。这个时候发送方的IP层就需要分片，把数据报分成若干片，是的每一片都小于MTU。而接收方IP层则需要进行数据报的重组。由于UDP的特性，某一片数据丢失时，接收方便无法重组数据报，导致丢弃整个UDP数据报。")]),t._v(" "),v("li",[v("strong",[t._v("流量控制")]),t._v("：当接收方来不及处理发送方的数据，能通过滑动窗口，提示发送方降低发送的速率，防止包丢失。")]),t._v(" "),v("li",[v("strong",[t._v("拥塞控制")]),t._v("：当网络拥塞时，通过拥塞窗口，减少数据的发送，防止包丢失。")])]),t._v(" "),v("h3",{attrs:{id:"第二种回答"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第二种回答"}},[t._v("#")]),t._v(" 第二种回答")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("建立连接（标志位）：通信前确认通信实体存在。")])]),t._v(" "),v("li",[v("p",[t._v("序号机制（序号、确认号）：确保了数据是按序、完整到达。")])]),t._v(" "),v("li",[v("p",[t._v("数据校验（校验和）：CRC校验全部数据。")])]),t._v(" "),v("li",[v("p",[t._v("超时重传（定时器）：保证因链路故障未能到达数据能够被多次重发。")])]),t._v(" "),v("li",[v("p",[t._v("窗口机制（窗口）：提供流量控制，避免过量发送。")])]),t._v(" "),v("li",[v("p",[t._v("拥塞控制：同上。")])])]),t._v(" "),v("h3",{attrs:{id:"第三种回答"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第三种回答"}},[t._v("#")]),t._v(" 第三种回答")]),t._v(" "),v("p",[v("strong",[t._v("首部校验")]),t._v("\n这个校验机制能够确保数据传输不会出错吗？ 答案是不能。")]),t._v(" "),v("p",[v("strong",[t._v("原因")])]),t._v(" "),v("p",[t._v("TCP协议中规定，TCP的首部字段中有一个字段是校验和，发送方将伪首部、TCP首部、TCP数据使用累加和校验的方式计算出一个数字，然后存放在首部的校验和字段里，接收者收到TCP包后重复这个过程，然后将计算出的校验和和接收到的首部中的校验和比较，如果不一致则说明数据在传输过程中出错。")]),t._v(" "),v("p",[t._v("这就是TCP的数据校验机制。 但是这个机制能够保证检查出一切错误吗？"),v("strong",[t._v("显然不能")]),t._v("。")]),t._v(" "),v("p",[t._v("因为这种校验方式是累加和，也就是将一系列的数字（TCP协议规定的是数据中的每16个比特位数据作为一个数字）求和后取末位。 但是小学生都知道A+B=B+A，假如在传输的过程中有前后两个16比特位的数据前后颠倒了（至于为什么这么巧合？我不知道，也许路由器有bug？也许是宇宙中的高能粒子击中了电缆？反正这个事情的概率不为零，就有可能会发生），那么校验和的计算结果和颠倒之前是一样的，那么接收端肯定无法检查出这是错误的数据。")]),t._v(" "),v("p",[v("strong",[t._v("解决方案")])]),t._v(" "),v("p",[t._v("传输之前先使用MD5加密数据获得摘要，跟数据一起发送到服务端，服务端接收之后对数据也进行MD5加密，如果加密结果和摘要一致，则认为没有问题")]),t._v(" "),v("p",{attrs:{id:"有地皮是什么"}}),t._v(" "),v("h2",{attrs:{id:"_85、udp是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_85、udp是什么"}},[t._v("#")]),t._v(" 85、UDP是什么？")]),t._v(" "),v("p",[t._v("提供"),v("strong",[t._v("无连接")]),t._v("的，尽最大努力的数据传输服务（"),v("strong",[t._v("不保证数据传输的可靠性")]),t._v("）。")]),t._v(" "),v("p",{attrs:{id:"体系屁和有地皮的区别"}}),t._v(" "),v("h2",{attrs:{id:"_86、tcp和udp的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_86、tcp和udp的区别"}},[t._v("#")]),t._v(" 86、TCP和UDP的区别")]),t._v(" "),v("p",[t._v("1、TCP面向连接（如打电话要先拨号建立连接）;UDP是无连接的，即发送数据之前不需要建立连接")]),t._v(" "),v("p",[t._v("2、TCP提供可靠的服务。也就是说，通过TCP连接传送的数据，无差错，不丢失，不重复，且按序到达;UDP尽最大努力交付，即不保证可靠交付")]),t._v(" "),v("p",[t._v("3、TCP面向字节流，实际上是TCP把数据看成一连串无结构的字节流;UDP是面向报文的")]),t._v(" "),v("p",[t._v("UDP没有拥塞控制，因此网络出现拥塞不会使源主机的发送速率降低（对实时应用很有用，如IP电话，实时视频会议等）")]),t._v(" "),v("p",[t._v("4、每一条TCP连接只能是点到点的;UDP支持一对一，一对多，多对一和多对多的交互通信")]),t._v(" "),v("p",[t._v("5、TCP首部开销20字节;UDP的首部开销小，只有8个字节")]),t._v(" "),v("p",[t._v("6、TCP的逻辑通信信道是全双工的可靠信道，UDP则是不可靠信道")]),t._v(" "),v("p",[t._v("7、UDP是面向报文的，发送方的UDP对应用层交下来的报文，不合并，不拆分，只是在其上面加上首部后就交给了下面的网络层，论应用层交给UDP多长的报文，它统统发送，一次发送一个。而对接收方，接到后直接去除首部，交给上面的应用层就完成任务了。因此，它需要应用层控制报文的大小")]),t._v(" "),v("p",[t._v("TCP是面向字节流的，它把上面应用层交下来的数据看成无结构的字节流会发送，可以想象成流水形式的，发送方TCP会将数据放入“蓄水池”（缓存区），等到可以发送的时候就发送，不能发送就等着TCP会根据当前网络的拥塞状态来确定每个报文段的大小。")]),t._v(" "),v("h2",{attrs:{id:"补充题-封包和拆包你听说过吗-它是基于tcp还是udp的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#补充题-封包和拆包你听说过吗-它是基于tcp还是udp的"}},[t._v("#")]),t._v(" 补充题：封包和拆包你听说过吗？它是基于TCP还是UDP的？")]),t._v(" "),v("p",[t._v("封包和拆包都是基于TCP的概念。因为TCP是无边界的流传输，所以需要对TCP进行封包和拆包，确保发送和接收的数据不粘连。")]),t._v(" "),v("ul",[v("li",[t._v("封包：封包就是在发送数据报的时候为每个TCP数据包加上一个包头，将数据报分为包头和包体两个部分。包头是一个固定长度的结构体，里面包含该数据包的总长度。")]),t._v(" "),v("li",[t._v("拆包：接收方在接收到报文后提取包头中的长度信息进行截取。")])]),t._v(" "),v("p",{attrs:{id:"有地皮的特点有哪些附赠体系屁的特点"}}),t._v(" "),v("h2",{attrs:{id:"_87、udp的特点有哪些-附赠tcp的特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_87、udp的特点有哪些-附赠tcp的特点"}},[t._v("#")]),t._v(" 87、UDP的特点有哪些（附赠TCP的特点）？")]),t._v(" "),v("ul",[v("li",[t._v("UDP是"),v("strong",[t._v("无连接的")]),t._v("；")]),t._v(" "),v("li",[t._v("UDP使用"),v("strong",[t._v("尽最大努力交付")]),t._v("，即不保证可靠交付，因此主机不需要维持复杂的链接状态（这里面有许多参数）；")]),t._v(" "),v("li",[t._v("UDP是"),v("strong",[t._v("面向报文")]),t._v("的；")]),t._v(" "),v("li",[t._v("UDP"),v("strong",[t._v("没有拥塞控制")]),t._v("，因此网络出现拥塞不会使源主机的发送速率降低（对实时应用很有用，如IP电话，实时视频会议等）；")]),t._v(" "),v("li",[t._v("UDP"),v("strong",[t._v("支持一对一、一对多、多对一和多对多")]),t._v("的交互通信；")]),t._v(" "),v("li",[t._v("UDP的"),v("strong",[t._v("首部开销小")]),t._v("，只有8个字节，比TCP的20个字节的首部要短。")])]),t._v(" "),v("p",[t._v("那么，再说一次TCP的特点：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("TCP是面向连接的")]),t._v("。（就好像打电话一样，通话前需要先拨号建立连接，通话结束后要挂机释放连接）；")]),t._v(" "),v("li",[t._v("每一条TCP连接只能有两个端点，每一条TCP连接只能是点对点的（"),v("strong",[t._v("一对一")]),t._v("）；")]),t._v(" "),v("li",[t._v("TCP"),v("strong",[t._v("提供可靠交付的服务")]),t._v("。通过TCP连接传送的数据，无差错、不丢失、不重复、并且按序到达；")]),t._v(" "),v("li",[t._v("TCP"),v("strong",[t._v("提供全双工通信")]),t._v("。TCP允许通信双方的应用进程在任何时候都能发送数据。TCP连接的两端都设有发送缓存和接收缓存，用来临时存放双方通信的数据；")]),t._v(" "),v("li",[v("strong",[t._v("面向字节流")]),t._v("。TCP中的“流”（stream）指的是流入进程或从进程流出的字节序列。“面向字节流”的含义是：虽然应用程序和TCP的交互是一次一个数据块（大小不等），但TCP把应用程序交下来的数据仅仅看成是一连串的无结构的字节流。")])]),t._v(" "),v("p",{attrs:{id:"体系屁对应的应用层协议"}}),t._v(" "),v("h2",{attrs:{id:"_88、tcp对应的应用层协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_88、tcp对应的应用层协议"}},[t._v("#")]),t._v(" 88、TCP对应的应用层协议")]),t._v(" "),v("p",[t._v("FTP：定义了文件传输协议，使用21端口.\nTelnet：它是一种用于远程登陆的端口,23端口\nSMTP：定义了简单邮件传送协议，服务器开放的是25号端口。\nPOP3：它是和SMTP对应，POP3用于接收邮件。")]),t._v(" "),v("p",{attrs:{id:"有地皮对应的应用层协议"}}),t._v(" "),v("h2",{attrs:{id:"_89、udp对应的应用层协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_89、udp对应的应用层协议"}},[t._v("#")]),t._v(" 89、UDP对应的应用层协议")]),t._v(" "),v("p",[t._v("DNS：用于域名解析服务，用的是53号端口\nSNMP：简单网络管理协议，使用161号端口\nTFTP(Trival File Transfer Protocal)：简单文件传输协议，69")]),t._v(" "),v("p",{attrs:{id:"数据链路层常见协议可以说一下吗"}}),t._v(" "),v("h2",{attrs:{id:"_90、数据链路层常见协议-可以说一下吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_90、数据链路层常见协议-可以说一下吗"}},[t._v("#")]),t._v(" 90、数据链路层常见协议？可以说一下吗？")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("协议")]),t._v(" "),v("th",[t._v("名称")]),t._v(" "),v("th",[t._v("作用")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("ARP")]),t._v(" "),v("td",[t._v("地址解析协议")]),t._v(" "),v("td",[t._v("根据IP地址获取物理地址")])]),t._v(" "),v("tr",[v("td",[t._v("RARP")]),t._v(" "),v("td",[t._v("反向地址转换协议")]),t._v(" "),v("td",[t._v("根据物理地址获取IP地址")])]),t._v(" "),v("tr",[v("td",[t._v("PPP")]),t._v(" "),v("td",[t._v("点对点协议")]),t._v(" "),v("td",[t._v("主要是用来通过拨号或专线方式建立点对点连接发送数据，使其成为各种主机、网桥和路由器之间简单连接的一种共通的解决方案")])])])]),t._v(" "),v("p",{attrs:{id:"命令基于哪一层协议的原理是什么"}}),t._v(" "),v("h2",{attrs:{id:"_91、ping命令基于什么协议-原理是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_91、ping命令基于什么协议-原理是什么"}},[t._v("#")]),t._v(" 91、Ping命令基于什么协议？原理是什么？")]),t._v(" "),v("p",[t._v("ping是基于网络层的ICMP协议实现的。通过向对方发送一个"),v("strong",[t._v("ICMP回送请求报文")]),t._v("，如果对方主机可达的话会收到该报文，并响应一个"),v("strong",[t._v("ICMP回送回答报文")]),t._v("。")]),t._v(" "),v("p",[t._v("扩展：ICMP报文的介绍。ICMP报文分为两个种类：")]),t._v(" "),v("ol",[v("li",[t._v("ICMP差错报告报文，常见的有\n"),v("ol",[v("li",[t._v("终点不可达")]),t._v(" "),v("li",[t._v("时间超过")]),t._v(" "),v("li",[t._v("参数问题")]),t._v(" "),v("li",[t._v("改变路由")])])]),t._v(" "),v("li",[t._v("ICMP询问报文\n"),v("ol",[v("li",[t._v("回送请求和回答：向特定主机发出"),v("strong",[t._v("回送请求报文")]),t._v("，收到回送请求报文的主机响应"),v("strong",[t._v("回送回答报文")]),t._v("。")]),t._v(" "),v("li",[t._v("时间戳请求和回答：询问对方当前的时间，返回的是一个32位的时间戳。")])])])]),t._v(" "),v("p",{attrs:{id:"在进行编程的时候一次发送多少好"}}),t._v(" "),v("h2",{attrs:{id:"_92、在进行udp编程的时候-一次发送多少bytes好"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_92、在进行udp编程的时候-一次发送多少bytes好"}},[t._v("#")]),t._v(" 92、在进行UDP编程的时候，一次发送多少bytes好?")]),t._v(" "),v("p",[t._v("当然,这个没有唯一答案，相对于不同的系统,不同的要求,其得到的答案是不一样的。")]),t._v(" "),v("p",[t._v("我这里仅对像ICQ一类的发送聊天消息的情况作分析，对于其他情况，你或许也能得到一点帮助:首先,我们知道,TCP/IP通常被认为是一个四层协议系统,包括链路层,网络层,运输层,应用层.UDP属于运输层,")]),t._v(" "),v("p",[t._v("下面我们由下至上一步一步来看:以太网(Ethernet)数据帧的长度必须在46-1500字节之间,这是由以太网的物理特性决定的.这个1500字节被称为链路层的MTU(最大传输单元).但这并不是指链路层的长度被限制在1500字节,其实这这个MTU指的是链路层的数据区.并不包括链路层的首部和尾部的18个字节.")]),t._v(" "),v("p",[t._v("所以,事实上,这个1500字节就是网络层IP数据报的长度限制。因为IP数据报的首部为20字节,所以IP数据报的数据区长度最大为1480字节.而这个1480字节就是用来放TCP传来的TCP报文段或UDP传来的UDP数据报的.又因为UDP数据报的首部8字节,所以UDP数据报的数据区最大长度为1472字节.这个1472字节就是我们可以使用的字节数。")]),t._v(" "),v("p",[t._v("当我们发送的UDP数据大于1472的时候会怎样呢？\n这也就是说IP数据报大于1500字节,大于MTU.这个时候发送方IP层就需要分片(fragmentation).\n把数据报分成若干片,使每一片都小于MTU.而接收方IP层则需要进行数据报的重组.\n这样就会多做许多事情,而更严重的是,由于UDP的特性,当某一片数据传送中丢失时,接收方便\n无法重组数据报.将导致丢弃整个UDP数据报。")]),t._v(" "),v("p",[t._v("因此,在普通的局域网环境下，我建议将UDP的数据控制在1472字节以下为好.")]),t._v(" "),v("p",[t._v("进行Internet编程时则不同,因为Internet上的路由器可能会将MTU设为不同的值.\n如果我们假定MTU为1500来发送数据的,而途经的某个网络的MTU值小于1500字节,那么系统将会使用一系列的机\n制来调整MTU值,使数据报能够顺利到达目的地,这样就会做许多不必要的操作.")]),t._v(" "),v("p",[t._v("鉴于Internet上的标准MTU值为576字节,所以我建议在进行Internet的UDP编程时.\n最好将UDP的数据长度控件在548字节(576-8-20)以内")]),t._v(" "),v("p",{attrs:{id:"体系屁利用滑动窗口实现流量控制的机制"}}),t._v(" "),v("h2",{attrs:{id:"_93、tcp-利用滑动窗口实现流量控制的机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_93、tcp-利用滑动窗口实现流量控制的机制"}},[t._v("#")]),t._v(" 93、TCP 利用滑动窗口实现流量控制的机制？")]),t._v(" "),v("blockquote",[v("p",[t._v("流量控制是为了控制发送方发送速率，保证接收方来得及接收。TCP 利用滑动窗口实现流量控制。")])]),t._v(" "),v("p",[t._v("TCP 中采用滑动窗口来进行传输控制，滑动窗口的大小意味着"),v("strong",[t._v("接收方还有多大的缓冲区可以用于接收数据")]),t._v("。发送方可以通过滑动窗口的大小来确定应该发送多少字节的数据。当滑动窗口为 0 时，发送方一般不能再发送数据报，但有两种情况除外，一种情况是可以发送紧急数据。")]),t._v(" "),v("blockquote",[v("p",[t._v("例如，允许用户终止在远端机上的运行进程。另一种情况是发送方可以发送一个 1 字节的数据报来通知接收方重新声明它希望接收的下一字节及发送方的滑动窗口大小。")])]),t._v(" "),v("p",{attrs:{id:"可以解释一下和超时重传分别是什么吗"}}),t._v(" "),v("h2",{attrs:{id:"_94、可以解释一下rto-rtt和超时重传分别是什么吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_94、可以解释一下rto-rtt和超时重传分别是什么吗"}},[t._v("#")]),t._v(" 94、可以解释一下RTO，RTT和超时重传分别是什么吗？")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("超时重传：发送端发送报文后若长时间未收到确认的报文则需要重发该报文。可能有以下几种情况：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("发送的数据没能到达接收端，所以对方没有响应。")])]),t._v(" "),v("li",[v("p",[t._v("接收端接收到数据，但是ACK报文在返回过程中丢失。")])]),t._v(" "),v("li",[v("p",[t._v("接收端拒绝或丢弃数据。")])])])]),t._v(" "),v("li",[v("p",[t._v("RTO：从上一次发送数据，因为长期没有收到ACK响应，到下一次重发之间的时间。就是重传间隔。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("通常每次重传RTO是前一次重传间隔的两倍，计量单位通常是RTT。例：1RTT，2RTT，4RTT，8RTT......")])]),t._v(" "),v("li",[v("p",[t._v("重传次数到达上限之后停止重传。")])])])]),t._v(" "),v("li",[v("p",[t._v("RTT：数据从发送到接收到对方响应之间的时间间隔，即数据报在网络中一个往返用时。大小不稳定。")])])]),t._v(" "),v("p",{attrs:{id:"插艾思攻击是什么低频"}}),t._v(" "),v("h2",{attrs:{id:"_95、xss攻击是什么-低频"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_95、xss攻击是什么-低频"}},[t._v("#")]),t._v(" 95、XSS攻击是什么？（低频）")]),t._v(" "),v("p",[t._v("跨站点脚本攻击，指攻击者通过篡改网页，嵌入恶意脚本程序，在用户浏览网页时，控制用户浏览器进行恶意操作的一种攻击方式。如何防范XSS攻击\n1）前端，服务端，同时需要字符串输入的长度限制。\n2）前端，服务端，同时需要对HTML转义处理。将其中的”<”,”>”等特殊字符进行转义编码。\n防 XSS 的核心是必须对输入的数据做过滤处理。")]),t._v(" "),v("p",{attrs:{id:"惜艾思攻击你知道吗"}}),t._v(" "),v("h2",{attrs:{id:"_96、csrf攻击-你知道吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_96、csrf攻击-你知道吗"}},[t._v("#")]),t._v(" 96、CSRF攻击？你知道吗？")]),t._v(" "),v("p",[t._v("跨站点请求伪造，指攻击者通过跨站请求，以合法的用户的身份进行非法操作。可以这么理解CSRF攻击：攻击者盗用你的身份，以你的名义向第三方网站发送恶意请求。CRSF能做的事情包括利用你的身份发邮件，发短信，进行交易转账，甚至盗取账号信息。")]),t._v(" "),v("p",{attrs:{id:"如何防范惜艾思攻击"}}),t._v(" "),v("h2",{attrs:{id:"_97、如何防范csrf攻击"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_97、如何防范csrf攻击"}},[t._v("#")]),t._v(" 97、如何防范CSRF攻击")]),t._v(" "),v("p",[v("strong",[t._v("安全框架")]),t._v("，例如Spring Security。\n"),v("strong",[t._v("token机制")]),t._v("。在HTTP请求中进行token验证，如果请求中没有token或者token内容不正确，则认为CSRF攻击而拒绝该请求。\n"),v("strong",[t._v("验证码")]),t._v("。通常情况下，验证码能够很好的遏制CSRF攻击，但是很多情况下，出于用户体验考虑，验证码只能作为一种辅助手段，而不是最主要的解决方案。\n"),v("strong",[t._v("referer识别")]),t._v("。在HTTP Header中有一个字段Referer，它记录了HTTP请求的来源地址。如果Referer是其他网站，就有可能是CSRF攻击，则拒绝该请求。但是，服务器并非都能取到Referer。很多用户出于隐私保护的考虑，限制了Referer的发送。在某些情况下，浏览器也不会发送Referer，例如HTTPS跳转到HTTP。\n1）验证请求来源地址；\n2）关键操作添加验证码；\n3）在请求地址添加 token 并验证。")]),t._v(" "),v("p",{attrs:{id:"文件上传漏洞是如何发生的你有经历过吗"}}),t._v(" "),v("h2",{attrs:{id:"_98、文件上传漏洞是如何发生的-你有经历过吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_98、文件上传漏洞是如何发生的-你有经历过吗"}},[t._v("#")]),t._v(" 98、文件上传漏洞是如何发生的？你有经历过吗？")]),t._v(" "),v("p",[t._v("文件上传漏洞，指的是用户上传一个可执行的脚本文件，并通过此脚本文件获得了执行服务端命令的能力。\n许多第三方框架、服务，都曾经被爆出文件上传漏洞，比如很早之前的Struts2，以及富文本编辑器等等，可被攻击者上传恶意代码，有可能服务端就被人黑了。")]),t._v(" "),v("p",{attrs:{id:"如何防范文件上传漏洞"}}),t._v(" "),v("h2",{attrs:{id:"_99、如何防范文件上传漏洞"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_99、如何防范文件上传漏洞"}},[t._v("#")]),t._v(" 99、如何防范文件上传漏洞")]),t._v(" "),v("p",[t._v("文件上传的目录设置为不可执行。")]),t._v(" "),v("p",[t._v("1）判断文件类型。在判断文件类型的时候，可以结合使用MIME Type，后缀检查等方式。因为对于上传文件，不能简单地通过后缀名称来判断文件的类型，因为攻击者可以将可执行文件的后缀名称改为图片或其他后缀类型，诱导用户执行。")]),t._v(" "),v("p",[t._v("2）对上传的文件类型进行白名单校验，只允许上传可靠类型。")]),t._v(" "),v("p",[t._v("3）上传的文件需要进行重新命名，使攻击者无法猜想上传文件的访问路径，将极大地增加攻击成本，同时向shell.php.rar.ara这种文件，因为重命名而无法成功实施攻击。")]),t._v(" "),v("p",[t._v("4）限制上传文件的大小。")]),t._v(" "),v("p",[t._v("5）单独设置文件服务器的域名。")]),t._v(" "),v("p",{attrs:{id:"拥塞控制原理听说过吗"}}),t._v(" "),v("h2",{attrs:{id:"_100、拥塞控制原理听说过吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_100、拥塞控制原理听说过吗"}},[t._v("#")]),t._v(" 100、拥塞控制原理听说过吗？")]),t._v(" "),v("ul",[v("li",[t._v("拥塞控制目的是防止数据过多注入到网络中导致网络资源（路由器、交换机等）过载。因为拥塞控制涉及网络链路全局，所以属于全局控制。控制拥塞使用拥塞窗口。")]),t._v(" "),v("li",[t._v("TCP拥塞控制算法：\n"),v("ul",[v("li",[t._v("慢开始 & 拥塞避免：先试探网络拥塞程度再逐渐增大拥塞窗口。假设窗口长度为d，收到一个确认就加1，正好收到了d个确认，所以一共加d，正好是翻倍，直到达到阀值ssthresh，这部分是慢开始过程。达到阀值后每次以一个MSS为单位增长拥塞窗口大小，当发生拥塞（超时未收到确认），将阀值减为原先一半，继续执行增加，这个过程为拥塞避免。")]),t._v(" "),v("li",[t._v("快速重传 & 快速恢复：略。")]),t._v(" "),v("li",[t._v("最终拥塞窗口会收敛于稳定值。")])])])]),t._v(" "),v("p",{attrs:{id:"如何区分流量控制和拥塞控制"}})])}),[],!1,null,null,null);_.default=r.exports}}]);
