(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{452:function(t,_,v){"use strict";v.r(_);var a=v(62),e=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{align:"center"}},[t._v("计算机网络")]),t._v(" "),v("p",{attrs:{id:"偶爱死的七层模型分别是各自的功能是什么"}}),t._v(" "),v("div",{staticStyle:{"border-color":"#24C6DC","background-color":"#e9f9f3",margin:"1rem 0",padding:".25rem 1rem","border-left-width":".3rem","border-left-style":"solid","border-radius":".5rem",color:"inherit"}},[v("p",[t._v("这是六则或许对你有些许帮助的信息:")]),t._v(" "),v("p",[t._v("⭐️1、阿秀与朋友合作开发了一个"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("编程资源网站")]),t._v("，目前已经收录了很多不错的学习资源和黑科技（附带下载地址），如过你想要寻求合适的编程资源，"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://tools.interviewguide.cn/home",target:"_blank"}},[t._v("欢迎体验")]),t._v("以及推荐自己认为不错的资源，众人拾柴火焰高，我为人人，人人为我🔥！")]),t._v(" "),v("p",[t._v("2、👉23年5月份阿秀从"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzk0ODU4MzEzMw==&mid=2247512170&idx=1&sn=c4a04a383d2dfdece676b75f17224e78",target:"_blank"}},[t._v("字节跳动离职跳槽到某外企")]),t._v("期间，为"),v("span",{staticStyle:{"font-weight":"bold"}},[t._v("方便自己找工作，增加上岸几率")]),t._v("，我自己从0开发了一个"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("互联网中大厂面试真题解析网站")]),t._v("，包括两个前端和一个后端。能够定向查看某些公司的某些岗位面试真题，比如我想查一下行业为互联网，公司为字节跳动，考察岗位为后端，考察时间为最近一年之类的面试题有哪些？\n")]),v("div",{attrs:{align:"center"}}),t._v("网站地址："),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://top.interviewguide.cn/",target:"_blank"}},[t._v("InterviewGuide大厂面试真题解析网站")]),t._v("。点此可以查看该网站的视频介绍："),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.bilibili.com/video/BV1f94y1C7BL",target:"_blank"}},[t._v("B站视频讲解")]),t._v("   如果可以的话求个B站三连，感谢！\n  "),v("p"),t._v("3、😊\n    分享一个学弟发给我的"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("20T网盘资源合集")]),t._v("，"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://docs.qq.com/sheet/DY3VPVklVaFFMcUZ4?tab=9h5afr",target:"_blank"}},[t._v("点此白嫖")]),t._v("，主要是各类高清影视、电视剧、音乐、副业、纪录片、英语四六级考试、考研考公等资源。\n  "),v("p"),t._v(" "),v("p",[t._v("4、😍免费分享阿秀个人学习计算机以来收集到的免费学习资源，"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/01-free/01-introduce.html",target:"_blank"}},[t._v("点此白嫖")]),t._v("；也记录一下自己以前买过的"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")]),t._v("；也记录一下自己以前买过的"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")])]),t._v(" "),v("p",[t._v("5、🚀如果你想在校招中顺利拿到更好的offer，阿秀建议你多看看前人"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("踩过的坑")]),t._v("和"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{target:"_blank",href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp"}},[t._v("留下的经验")]),t._v("，事实上你现在遇到的大多数问题你的学长学姐师兄师姐基本都已经遇到过了。\n  ")]),t._v(" "),v("p",[t._v("6、🔥 欢迎准备计算机校招的小伙伴加入我的"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/xg0otqvc17wfx4u9",target:"_blank"}},[t._v("学习圈子")]),t._v("，一个人踽踽独行不如一群人报团取暖，圈子里沉淀了很多过去21/22/23届学长学姐的"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp",target:"_blank"}},[t._v("经验和总结")]),t._v("，好好跟着走下去的，最后基本都可以拿到不错的offer！此外，每周都会进行"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("精华总结和分享！")]),t._v("如果你需要《阿秀的学习笔记》网站中📚︎校招八股文相关知识点的PDF版本的话，可以"),v("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/qs0yn66apvkzw0ps",target:"_blank"}},[t._v("点此下载")]),t._v(" 。")])]),t._v("\n>\n"),v("h2",{attrs:{id:"_1、osi-的七层模型分别是-各自的功能是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、osi-的七层模型分别是-各自的功能是什么"}},[t._v("#")]),t._v(" 1、OSI 的七层模型分别是？各自的功能是什么？")]),t._v(" "),v("h3",{attrs:{id:"简要概括"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简要概括"}},[t._v("#")]),t._v(" 简要概括")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("物理层：底层数据传输，如网线；网卡标准。")])]),t._v(" "),v("li",[v("p",[t._v("数据链路层：定义数据的基本格式，如何传输，如何标识；如网卡MAC地址。")])]),t._v(" "),v("li",[v("p",[t._v("网络层：定义IP编址，定义路由功能；如不同设备的数据转发。")])]),t._v(" "),v("li",[v("p",[t._v("传输层：端到端传输数据的基本功能；如 TCP、UDP。")])]),t._v(" "),v("li",[v("p",[t._v("会话层：控制应用程序之间会话能力；如不同软件数据分发给不同软件。")])]),t._v(" "),v("li",[v("p",[t._v("表示层：数据格式标识，基本压缩加密功能。")])]),t._v(" "),v("li",[v("p",[t._v("应用层：各种应用软件，包括 Web 应用。")])])]),t._v(" "),v("h3",{attrs:{id:"说明"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),v("ul",[v("li",[t._v("在四层，既传输层数据被称作"),v("strong",[t._v("tcp报文段或udp用户数据报")]),t._v("（Segments）；")]),t._v(" "),v("li",[t._v("三层网络层数据被称做"),v("strong",[t._v("包")]),t._v("（Packages）；")]),t._v(" "),v("li",[t._v("二层数据链路层时数据被称为"),v("strong",[t._v("帧")]),t._v("（Frames）；")]),t._v(" "),v("li",[t._v("一层物理层时数据被称为"),v("strong",[t._v("比特流")]),t._v("（Bits）。")])]),t._v(" "),v("h3",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("ul",[v("li",[t._v("网络七层模型是一个标准，而非实现。")]),t._v(" "),v("li",[t._v("网络四层模型是一个实现的应用模型。")]),t._v(" "),v("li",[t._v("网络四层模型由七层模型简化合并而来。")])]),t._v(" "),v("p",{attrs:{id:"说一下一次完整的请求"}}),t._v(" "),v("h2",{attrs:{id:"_2、说一下一次完整的http请求过程包括哪些内容"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、说一下一次完整的http请求过程包括哪些内容"}},[t._v("#")]),t._v(" 2、说一下一次完整的HTTP请求过程包括哪些内容？")]),t._v(" "),v("h3",{attrs:{id:"第一种回答"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一种回答"}},[t._v("#")]),t._v(" 第一种回答")]),t._v(" "),v("ul",[v("li",[t._v("建立起客户机和服务器连接。")]),t._v(" "),v("li",[t._v("建立连接后，客户机发送一个请求给服务器。")]),t._v(" "),v("li",[t._v("服务器收到请求给予响应信息。")]),t._v(" "),v("li",[t._v("客户端浏览器将返回的内容解析并呈现，断开连接。")])]),t._v(" "),v("h3",{attrs:{id:"第二种回答"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第二种回答"}},[t._v("#")]),t._v(" 第二种回答")]),t._v(" "),v("p",[t._v("域名解析 --\x3e 发起TCP的3次握手 --\x3e 建立TCP连接后发起http请求 --\x3e 服务器响应http请求，浏览器得到html代码 --\x3e 浏览器解析html代码，并请求html代码中的资源（如js、css、图片等） --\x3e 浏览器对页面进行渲染呈现给用户。")]),t._v(" "),v("p",{attrs:{id:"你知道第嗯斯是什么"}}),t._v(" "),v("h2",{attrs:{id:"_3、你知道dns是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、你知道dns是什么"}},[t._v("#")]),t._v(" 3、你知道DNS是什么？")]),t._v(" "),v("p",[v("strong",[t._v("官方解释")]),t._v("：DNS（Domain Name System，域名系统），因特网上作为"),v("strong",[t._v("域名和IP地址相互映射")]),t._v("的一个"),v("strong",[t._v("分布式数据库")]),t._v("，能够使用户更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串。")]),t._v(" "),v("p",[t._v("通过主机名，最终得到该主机名对应的IP地址的过程叫做域名解析（或主机名解析）。")]),t._v(" "),v("p",[v("strong",[t._v("通俗的讲")]),t._v("，我们更习惯于记住一个网站的名字，比如www.baidu.com,而不是记住它的ip地址，比如：167.23.10.2。")]),t._v(" "),v("p",{attrs:{id:"第嗯斯的工作原理"}}),t._v(" "),v("h2",{attrs:{id:"_4、dns的工作原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4、dns的工作原理"}},[t._v("#")]),t._v(" 4、DNS的工作原理？")]),t._v(" "),v("p",[t._v("将主机域名转换为ip地址，属于应用层协议，使用UDP传输。（DNS应用层协议，以前有个考官问过）")]),t._v(" "),v("p",[v("img",{attrs:{src:"http://oss.interviewguide.cn/img/202205220036790.png",alt:""}}),t._v("\n过程：\n总结： 浏览器缓存，系统缓存，路由器缓存，IPS服务器缓存，根域名服务器缓存，顶级域名服务器缓存，主域名服务器缓存。\n一、主机向本地域名服务器的查询一般都是采用递归查询。\n二、本地域名服务器向根域名服务器的查询的迭代查询。")]),t._v(" "),v("ol",[v("li",[t._v("当用户输入域名时，浏览器先检查自己的缓存中是否包含这个域名映射的ip地址，有解析结束。\n2）若没命中，则检查操作系统缓存（如Windows的hosts）中有没有解析过的结果，有解析结束。\n3）若无命中，则请求本地域名服务器解析（LDNS）。\n4）若LDNS没有命中就直接跳到根域名服务器请求解析。根域名服务器返回给LDNS一个 主域名服务器地址。\n5）此时LDNS再发送请求给上一步返回的gTLD（ 通用顶级域）， 接受请求的gTLD查找并返回这个域名对应的Name Server的地址\n6）Name Server根据映射关系表找到目标ip，返回给LDNS")]),t._v(" "),v("li",[t._v("LDNS缓存这个域名和对应的ip， 把解析的结果返回给用户，用户根据TTL值缓存到本地系统缓存中，域名解析过程至此结束")])]),t._v(" "),v("p",{attrs:{id:"为什么域名解析用有地皮协议"}}),t._v(" "),v("h2",{attrs:{id:"_5、为什么域名解析用udp协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5、为什么域名解析用udp协议"}},[t._v("#")]),t._v(" 5、为什么域名解析用UDP协议？")]),t._v(" "),v("p",[t._v("因为UDP快啊！UDP的DNS协议只要一个请求、一个应答就好了。")]),t._v(" "),v("p",[t._v("而使用基于TCP的DNS协议要三次握手、发送数据以及应答、四次挥手，但是UDP协议传输内容不能超过512字节。")]),t._v(" "),v("p",[t._v("不过客户端向DNS服务器查询域名，一般返回的内容都不超过512字节，用UDP传输即可。")]),t._v(" "),v("p",{attrs:{id:"为什么区域传送用协议"}}),t._v(" "),v("h2",{attrs:{id:"_6、为什么区域传送用tcp协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6、为什么区域传送用tcp协议"}},[t._v("#")]),t._v(" 6、为什么区域传送用TCP协议？")]),t._v(" "),v("p",[t._v("因为TCP协议可靠性好啊！")]),t._v(" "),v("p",[t._v("你要从主DNS上复制内容啊，你用不可靠的UDP？ 因为TCP协议传输的内容大啊，你用最大只能传512字节的UDP协议？万一同步的数据大于512字节，你怎么办？所以用TCP协议比较好！")]),t._v(" "),v("p",{attrs:{id:"长连接和短连接的区别"}}),t._v(" "),v("h2",{attrs:{id:"_7、http长连接和短连接的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7、http长连接和短连接的区别"}},[t._v("#")]),t._v(" 7、HTTP长连接和短连接的区别")]),t._v(" "),v("p",[t._v("在HTTP/1.0中默认使用短连接。也就是说，客户端和服务器每进行一次HTTP操作，就建立一次连接，任务结束就中断连接。")]),t._v(" "),v("p",[t._v("而从HTTP/1.1起，默认使用长连接，用以保持连接特性。")]),t._v(" "),v("p",{attrs:{id:"什么是粘包拆包发生的原因"}}),t._v(" "),v("h2",{attrs:{id:"_8、什么是tcp粘包-拆包-发生的原因"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8、什么是tcp粘包-拆包-发生的原因"}},[t._v("#")]),t._v(" 8、什么是TCP粘包/拆包？发生的原因？")]),t._v(" "),v("p",[t._v("一个完整的业务可能会被TCP拆分成多个包进行发送，也有可能把多个小的包封装成一个大的数据包发送，这个就是TCP的拆包和粘包问题。")]),t._v(" "),v("h5",{attrs:{id:"原因"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),v("p",[t._v("1、应用程序写入数据的字节大小大于套接字发送缓冲区的大小.")]),t._v(" "),v("p",[t._v("2、进行MSS大小的TCP分段。( MSS=TCP报文段长度-TCP首部长度)")]),t._v(" "),v("p",[t._v("3、以太网的payload大于MTU进行IP分片。（ MTU指：一种通信协议的某一层上面所能通过的最大数据包大小。）")]),t._v(" "),v("h5",{attrs:{id:"解决方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),v("p",[t._v("1、消息定长。")]),t._v(" "),v("p",[t._v("2、在包尾部增加回车或者空格符等特殊字符进行分割")]),t._v(" "),v("p",[t._v("3、将消息分为消息头和消息尾")]),t._v(" "),v("p",[t._v("4、使用其它复杂的协议，如RTMP协议等。")]),t._v(" "),v("p",{attrs:{id:"为什么服务器会缓存这一项功能如何实现的"}}),t._v(" "),v("h2",{attrs:{id:"_9、为什么服务器会缓存这一项功能-如何实现的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9、为什么服务器会缓存这一项功能-如何实现的"}},[t._v("#")]),t._v(" 9、为什么服务器会缓存这一项功能?如何实现的？")]),t._v(" "),v("p",[v("strong",[t._v("原因")])]),t._v(" "),v("ul",[v("li",[t._v("缓解服务器压力；")]),t._v(" "),v("li",[t._v("降低客户端获取资源的延迟：缓存通常位于内存中，读取缓存的速度更快。并且缓存服务器在地理位置上也有可能比源服务器来得近，例如浏览器缓存。")])]),t._v(" "),v("p",[v("strong",[t._v("实现方法")])]),t._v(" "),v("ul",[v("li",[t._v("让代理服务器进行缓存；")]),t._v(" "),v("li",[t._v("让客户端浏览器进行缓存。")])]),t._v(" "),v("p",{attrs:{id:"请求方法你知道多少"}}),t._v(" "),v("h2",{attrs:{id:"_10、http请求方法你知道多少"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_10、http请求方法你知道多少"}},[t._v("#")]),t._v(" 10、HTTP请求方法你知道多少？")]),t._v(" "),v("p",[t._v("客户端发送的   "),v("strong",[t._v("请求报文")]),t._v("   第一行为请求行，包含了方法字段。")]),t._v(" "),v("p",[t._v("根据 HTTP 标准，HTTP 请求可以使用多种请求方法。")]),t._v(" "),v("p",[t._v("HTTP1.0 定义了三种请求方法： GET, POST 和 HEAD方法。")]),t._v(" "),v("p",[t._v("HTTP1.1 新增了六种请求方法：OPTIONS、PUT、PATCH、DELETE、TRACE 和 CONNECT 方法。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("序  号")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("GET")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("请求指定的页面信息，并返回实体主体。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("HEAD")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("POST")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和/或已有资源的修改。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("PUT")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("从客户端向服务器传送的数据取代指定的文档的内容。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("DELETE")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("请求服务器删除指定的页面。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("CONNECT")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("OPTIONS")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("允许客户端查看服务器的性能。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("TRACE")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("回显服务器收到的请求，主要用于测试或诊断。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("9")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("PATCH")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("是对 PUT 方法的补充，用来对已知资源进行局部更新 。")])])])]),t._v(" "),v("p",{attrs:{id:"和的区别你知道哪些"}}),t._v(" "),v("h2",{attrs:{id:"_11、get-和-post-的区别-你知道哪些"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_11、get-和-post-的区别-你知道哪些"}},[t._v("#")]),t._v(" 11、GET 和 POST 的区别，你知道哪些？")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("get是获取数据，post是修改数据")])]),t._v(" "),v("li",[v("p",[t._v("get把请求的数据放在url上， 以?分割URL和传输数据，参数之间以&相连，所以get不太安全。而post把数据放在HTTP的包体内（request body  相对安全）")])]),t._v(" "),v("li",[v("p",[t._v("get提交的数据最大是2k（ 限制实际上取决于浏览器）， post理论上没有限制。")])]),t._v(" "),v("li",[v("p",[t._v("GET产生一个TCP数据包，浏览器会把http header和data一并发送出去，服务器响应200(返回数据); POST产生两个TCP数据包，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok(返回数据)。")])]),t._v(" "),v("li",[v("p",[t._v("GET请求会被浏览器主动缓存，而POST不会，除非手动设置。")])]),t._v(" "),v("li",[v("p",[t._v("本质区别：GET是幂等的，而POST不是幂等的")]),t._v(" "),v("blockquote",[v("p",[t._v("这里的幂等性：幂等性是指一次和多次请求某一个资源应该具有同样的副作用。简单来说意味着对同一URL的多个请求应该返回同样的结果。")])])])]),t._v(" "),v("p",[t._v("正因为它们有这样的区别，所以不应该且"),v("strong",[t._v("不能用get请求做数据的增删改这些有副作用的操作")]),t._v("。因为get请求是幂等的，"),v("strong",[t._v("在网络不好的隧道中会尝试重试")]),t._v("。如果用get请求增数据，会有"),v("strong",[t._v("重复操作")]),t._v("的风险，而这种重复操作可能会导致副作用（浏览器和操作系统并不知道你会用get请求去做增操作）。")]),t._v(" "),v("p",{attrs:{id:"一个连接可以对应几个请求"}}),t._v(" "),v("h2",{attrs:{id:"_12、一个tcp连接可以对应几个http请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_12、一个tcp连接可以对应几个http请求"}},[t._v("#")]),t._v(" 12、一个TCP连接可以对应几个HTTP请求？")]),t._v(" "),v("p",[t._v("如果维持连接，一个 TCP 连接是可以发送多个 HTTP 请求的。")]),t._v(" "),v("p",{attrs:{id:"一个连接中请求发送可以一起发送么比如一起发三个请求再三个响应一起接收"}}),t._v(" "),v("h2",{attrs:{id:"_13、一个-tcp-连接中-http-请求发送可以一起发送么-比如一起发三个请求-再三个响应一起接收"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_13、一个-tcp-连接中-http-请求发送可以一起发送么-比如一起发三个请求-再三个响应一起接收"}},[t._v("#")]),t._v(" 13、一个 TCP 连接中 HTTP 请求发送可以一起发送么（比如一起发三个请求，再三个响应一起接收）？")]),t._v(" "),v("p",[t._v("HTTP/1.1 存在一个问题，单个 TCP 连接在同一时刻只能处理一个请求，意思是说：两个请求的生命周期不能重叠，任意两个 HTTP 请求从开始到结束的时间在同一个 TCP 连接里不能重叠。")]),t._v(" "),v("p",[t._v("在 HTTP/1.1 存在 Pipelining 技术可以完成这个多个请求同时发送，但是由于浏览器默认关闭，所以可以认为这是不可行的。在 HTTP2 中由于 Multiplexing 特点的存在，多个 HTTP 请求可以在同一个 TCP 连接中并行进行。")]),t._v(" "),v("p",[t._v("那么在 HTTP/1.1 时代，浏览器是如何提高页面加载效率的呢？主要有下面两点：")]),t._v(" "),v("ul",[v("li",[t._v("维持和服务器已经建立的 TCP 连接，在同一连接上顺序处理多个请求。")]),t._v(" "),v("li",[t._v("和服务器建立多个 TCP 连接。")])]),t._v(" "),v("p",{attrs:{id:"浏览器对同一建立连接到的数量有没有限制"}}),t._v(" "),v("h2",{attrs:{id:"_14、浏览器对同一-host-建立-tcp-连接到的数量有没有限制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_14、浏览器对同一-host-建立-tcp-连接到的数量有没有限制"}},[t._v("#")]),t._v(" 14、浏览器对同一 Host 建立 TCP 连接到的数量有没有限制？")]),t._v(" "),v("p",[t._v("假设我们还处在 HTTP/1.1 时代，那个时候没有多路传输，当浏览器拿到一个有几十张图片的网页该怎么办呢？肯定不能只开一个 TCP 连接顺序下载，那样用户肯定等的很难受，但是如果每个图片都开一个 TCP 连接发 HTTP 请求，那电脑或者服务器都可能受不了，要是有 1000 张图片的话总不能开 1000 个TCP 连接吧，你的电脑同意 NAT 也不一定会同意。")]),t._v(" "),v("p",[v("strong",[t._v("有。Chrome 最多允许对同一个 Host 建立六个 TCP 连接。不同的浏览器有一些区别。")])]),t._v(" "),v("p",[t._v("如果图片都是 HTTPS 连接并且在同一个域名下，那么浏览器在 SSL 握手之后会和服务器商量能不能用 HTTP2，如果能的话就使用 Multiplexing 功能在这个连接上进行多路传输。不过也未必会所有挂在这个域名的资源都会使用一个 TCP 连接去获取，但是可以确定的是 Multiplexing 很可能会被用到。")]),t._v(" "),v("p",[t._v("如果发现用不了 HTTP2 呢？或者用不了 HTTPS（现实中的 HTTP2 都是在 HTTPS 上实现的，所以也就是只能使用 HTTP/1.1）。那浏览器就会在一个 HOST 上建立多个 TCP 连接，连接数量的最大限制取决于浏览器设置，这些连接会在空闲的时候被浏览器用来发送新的请求，如果所有的连接都正在发送请求呢？那其他的请求就只能等等了。")]),t._v(" "),v("blockquote",[v("p",[t._v("update1：微信好友“卷轴”提出勘误“连接到”-》“连接到的”")]),t._v(" "),v("p",{attrs:{id:"在浏览器中输入地址后显示主页的过程"}})]),t._v(" "),v("h2",{attrs:{id:"_15、在浏览器中输入url地址后显示主页的过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_15、在浏览器中输入url地址后显示主页的过程"}},[t._v("#")]),t._v(" 15、在浏览器中输入url地址后显示主页的过程?")]),t._v(" "),v("blockquote",[v("ul",[v("li",[t._v("根据域名，进行DNS域名解析；")]),t._v(" "),v("li",[t._v("拿到解析的IP地址，建立TCP连接；")]),t._v(" "),v("li",[t._v("向IP地址，发送HTTP请求；")]),t._v(" "),v("li",[t._v("服务器处理请求；")]),t._v(" "),v("li",[t._v("返回响应结果；")]),t._v(" "),v("li",[t._v("关闭TCP连接；")]),t._v(" "),v("li",[t._v("浏览器解析HTML；")]),t._v(" "),v("li",[t._v("浏览器布局渲染；")])])]),t._v(" "),v("p",{attrs:{id:"在浏览器地址栏输入一个有啊艾欧后回车"}}),t._v(" "),v("h2",{attrs:{id:"_16、在浏览器地址栏输入一个url后回车-背后会进行哪些技术步骤"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_16、在浏览器地址栏输入一个url后回车-背后会进行哪些技术步骤"}},[t._v("#")]),t._v(" 16、在浏览器地址栏输入一个URL后回车，背后会进行哪些技术步骤？")]),t._v(" "),v("h3",{attrs:{id:"第一种回答-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一种回答-2"}},[t._v("#")]),t._v(" 第一种回答")]),t._v(" "),v("p",[t._v("1、查浏览器缓存，看看有没有已经缓存好的，如果没有")]),t._v(" "),v("p",[t._v("2 、检查本机host文件，")]),t._v(" "),v("p",[t._v("3、调用API，Linux下Socket函数 gethostbyname")]),t._v(" "),v("p",[t._v("4、向DNS服务器发送DNS请求，查询本地DNS服务器，这其中用的是UDP的协议")]),t._v(" "),v("p",[t._v("5、如果在一个子网内采用ARP地址解析协议进行ARP查询如果不在一个子网那就需要对默认网关进行DNS查询，如果还找不到会一直向上找根DNS服务器，直到最终拿到IP地址（全球400多个根DNS服务器，由13个不同的组织管理）")]),t._v(" "),v("p",[t._v("6、这个时候我们就有了服务器的IP地址 以及默认的端口号了，http默认是80 https是 443 端口号，会，首先尝试http然后调用Socket建立TCP连接，")]),t._v(" "),v("p",[t._v("7、经过三次握手成功建立连接后，开始传送数据，如果正是http协议的话，就返回就完事了，")]),t._v(" "),v("p",[t._v("8、如果不是http协议，服务器会返回一个5开头的的重定向消息，告诉我们用的是https，那就是说IP没变，但是端口号从80变成443了，好了，再四次挥手，完事，")]),t._v(" "),v("p",[t._v("9、再来一遍，这次除了上述的端口号从80变成443之外，还会采用SSL的加密技术来保证传输数据的安全性，保证数据传输过程中不被修改或者替换之类的，")]),t._v(" "),v("p",[t._v("10、这次依然是三次握手，沟通好双方使用的认证算法，加密和检验算法，在此过程中也会检验对方的CA安全证书。")]),t._v(" "),v("p",[t._v("11、确认无误后，开始通信，然后服务器就会返回你所要访问的网址的一些数据，在此过程中会将界面进行渲染，牵涉到ajax技术之类的，直到最后我们看到色彩斑斓的网页")]),t._v(" "),v("blockquote",[v("p",[t._v("update1:为微信好友”卷轴“提出勘误”缺少5“-》现已加上")])]),t._v(" "),v("h3",{attrs:{id:"第二种回答-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第二种回答-2"}},[t._v("#")]),t._v(" 第二种回答")]),t._v(" "),v("p",[t._v("浏览器检查域名是否在缓存当中（要查看 Chrome 当中的缓存， 打开 chrome://net-internals/#dns）。")]),t._v(" "),v("p",[t._v("如果缓存中没有，就去调用 "),v("code",[t._v("gethostbyname")]),t._v(" 库函数（操作系统不同函数也不同）进行查询。")]),t._v(" "),v("p",[t._v("如果 "),v("code",[t._v("gethostbyname")]),t._v(" 没有这个域名的缓存记录，也没有在 "),v("code",[t._v("hosts")]),t._v(" 里找到，它将会向 DNS 服务器发送一条 DNS 查询请求。DNS 服务器是由网络通信栈提供的，通常是本地路由器或者 ISP 的缓存 DNS 服务器。")]),t._v(" "),v("p",[t._v("查询本地 DNS 服务器")]),t._v(" "),v("p",[t._v("如果 DNS 服务器和我们的主机在同一个子网内，系统会按照下面的 ARP 过程对 DNS 服务器进行 ARP查询")]),t._v(" "),v("p",[t._v("如果 DNS 服务器和我们的主机在不同的子网，系统会按照下面的 ARP 过程对默认网关进行查询")]),t._v(" "),v("p",{attrs:{id:"谈谈解析过程具体一点"}}),t._v(" "),v("h2",{attrs:{id:"_17、谈谈dns解析过程-具体一点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_17、谈谈dns解析过程-具体一点"}},[t._v("#")]),t._v(" 17、谈谈DNS解析过程，具体一点")]),t._v(" "),v("p",[v("img",{attrs:{src:"http://oss.interviewguide.cn/img/202205220036692.png",alt:""}})]),t._v(" "),v("ul",[v("li",[t._v("请求一旦发起，若是chrome浏览器，先在浏览器找之前"),v("strong",[t._v("有没有缓存过的域名所对应的ip地址")]),t._v("，有的话，直接跳过dns解析了，若是没有，就会"),v("strong",[t._v("找硬盘的hosts文件")]),t._v("，看看有没有，有的话，直接找到hosts文件里面的ip")]),t._v(" "),v("li",[t._v("如果本地的hosts文件没有能得到对应的ip地址，浏览器会发出一个"),v("strong",[t._v("dns请求到本地dns服务器")]),t._v("，"),v("strong",[t._v("本地dns服务器一般都是你的网络接入服务器商提供")]),t._v("，比如中国电信，中国移动等。")]),t._v(" "),v("li",[t._v("查询你输入的网址的DNS请求到达本地DNS服务器之后，"),v("strong",[t._v("本地DNS服务器会首先查询它的缓存记录")]),t._v("，如果缓存中有此条记录，就可以直接返回结果，此过程是"),v("strong",[t._v("递归的方式进行查询")]),t._v("。如果没有，本地DNS服务器还要向"),v("strong",[t._v("DNS根服务器")]),t._v("进行查询。")]),t._v(" "),v("li",[t._v("本地DNS服务器继续向域服务器发出请求，在这个例子中，请求的对象是.com域服务器。.com域服务器收到请求之后，也不会直接返回域名和IP地址的对应关系，而是告诉本地DNS服务器，你的域名的解析服务器的地址。")]),t._v(" "),v("li",[t._v("最后，本地DNS服务器向"),v("strong",[t._v("域名的解析服务器")]),t._v("发出请求，这时就能收到一个域名和IP地址对应关系，本地DNS服务器不仅要把IP地址返回给用户电脑，还要把这个对应关系保存在缓存中，以备下次别的用户查询时，可以直接返回结果，加快网络访问。")])]),t._v(" "),v("p",{attrs:{id:"负载均衡是什么策略"}}),t._v(" "),v("h2",{attrs:{id:"_18、dns负载均衡是什么策略"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_18、dns负载均衡是什么策略"}},[t._v("#")]),t._v(" 18、DNS负载均衡是什么策略？")]),t._v(" "),v("p",[t._v("当一个网站有足够多的用户的时候，假如每次请求的资源都位于同一台机器上面，那么这台机器随时可能会崩掉。处理办法就是用DNS负载均衡技术，它的原理是在"),v("strong",[t._v("DNS服务器中为同一个主机名配置多个IP地址,在应答DNS查询时,DNS服务器对每个查询将以DNS文件中主机记录的IP地址按顺序返回不同的解析结果,将客户端的访问引导到不同的机器上去,使得不同的客户端访问不同的服务器")]),t._v(",从而达到负载均衡的目的｡例如可以根据每台机器的负载量，该机器离用户地理位置的距离等等。")]),t._v(" "),v("p",{attrs:{id:"爱去提提皮和爱去的区别"}}),t._v(" "),v("h2",{attrs:{id:"_19、https和http的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_19、https和http的区别"}},[t._v("#")]),t._v(" 19、HTTPS和HTTP的区别")]),t._v(" "),v("p",[t._v("1、HTTP协议传输的数据都是未加密的，也就是明文的，因此使用HTTP协议传输隐私信息非常不安全， HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比http协议安全。")]),t._v(" "),v("p",[t._v("2、https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。\n3、http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。")]),t._v(" "),v("p",{attrs:{id:"什么是艾斯提和提爱斯"}}),t._v(" "),v("p",{attrs:{id:"什么是艾斯提和提爱斯"}}),t._v(" "),v("h2",{attrs:{id:"_20、什么是ssl-tls"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_20、什么是ssl-tls"}},[t._v("#")]),t._v(" 20、什么是SSL/TLS ？")]),t._v(" "),v("p",[t._v("SSL代表安全套接字层。它是一种用于加密和验证应用程序（如浏览器）和Web服务器之间发送的数据的协议。 身份验证 ， 加密Https的加密机制是一种共享密钥加密和公开密钥加密并用的混合加密机制。")]),t._v(" "),v("p",[t._v("SSL/TLS协议作用：认证用户和服务，加密数据，维护数据的完整性的应用层协议加密和解密需要两个不同的密钥，故被称为非对称加密；加密和解密都使用同一个密钥的")]),t._v(" "),v("p",[t._v("对称加密：优点在于加密、解密效率通常比较高 ，HTTPS 是基于非对称加密的， 公钥是公开的，")])])}),[],!1,null,null,null);_.default=e.exports}}]);
