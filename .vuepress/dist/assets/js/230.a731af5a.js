(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{645:function(t,n,e){"use strict";e.r(n);var s=e(62),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticStyle:{"border-color":"#24C6DC","background-color":"#e9f9f3",margin:"1rem 0",padding:".25rem 1rem","border-left-width":".3rem","border-left-style":"solid","border-radius":".5rem",color:"inherit"}},[e("p",[t._v("这是六则或许对你有些许帮助的信息:")]),t._v(" "),e("p",[t._v("⭐️1、阿秀与朋友合作开发了一个"),e("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("编程资源网站")]),t._v("，目前已经收录了很多不错的学习资源和黑科技（附带下载地址），如过你想要寻求合适的编程资源，"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://tools.interviewguide.cn/home",target:"_blank"}},[t._v("欢迎体验")]),t._v("以及推荐自己认为不错的资源，众人拾柴火焰高，我为人人，人人为我🔥！")]),t._v(" "),e("p",[t._v("2、👉23年5月份阿秀从"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzk0ODU4MzEzMw==&mid=2247512170&idx=1&sn=c4a04a383d2dfdece676b75f17224e78",target:"_blank"}},[t._v("字节跳动离职跳槽到某外企")]),t._v("期间，为"),e("span",{staticStyle:{"font-weight":"bold"}},[t._v("方便自己找工作，增加上岸几率")]),t._v("，我自己从0开发了一个"),e("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("互联网中大厂面试真题解析网站")]),t._v("，包括两个前端和一个后端。能够定向查看某些公司的某些岗位面试真题，比如我想查一下行业为互联网，公司为字节跳动，考察岗位为后端，考察时间为最近一年之类的面试题有哪些？\n")]),e("div",{attrs:{align:"center"}}),t._v("网站地址："),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://top.interviewguide.cn/",target:"_blank"}},[t._v("InterviewGuide大厂面试真题解析网站")]),t._v("。点此可以查看该网站的视频介绍："),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.bilibili.com/video/BV1f94y1C7BL",target:"_blank"}},[t._v("B站视频讲解")]),t._v("   如果可以的话求个B站三连，感谢！\n  "),e("p"),t._v("3、😊\n    分享一个学弟发给我的"),e("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("20T网盘资源合集")]),t._v("，"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://docs.qq.com/sheet/DY3VPVklVaFFMcUZ4?tab=9h5afr",target:"_blank"}},[t._v("点此白嫖")]),t._v("，主要是各类高清影视、电视剧、音乐、副业、纪录片、英语四六级考试、考研考公等资源。\n  "),e("p"),t._v(" "),e("p",[t._v("4、😍免费分享阿秀个人学习计算机以来收集到的免费学习资源，"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/01-free/01-introduce.html",target:"_blank"}},[t._v("点此白嫖")]),t._v("；也记录一下自己以前买过的"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")]),t._v("；也记录一下自己以前买过的"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")])]),t._v(" "),e("p",[t._v("5、🚀如果你想在校招中顺利拿到更好的offer，阿秀建议你多看看前人"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("踩过的坑")]),t._v("和"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{target:"_blank",href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp"}},[t._v("留下的经验")]),t._v("，事实上你现在遇到的大多数问题你的学长学姐师兄师姐基本都已经遇到过了。\n  ")]),t._v(" "),e("p",[t._v("6、🔥 欢迎准备计算机校招的小伙伴加入我的"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/xg0otqvc17wfx4u9",target:"_blank"}},[t._v("学习圈子")]),t._v("，一个人踽踽独行不如一群人报团取暖，圈子里沉淀了很多过去21/22/23届学长学姐的"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp",target:"_blank"}},[t._v("经验和总结")]),t._v("，好好跟着走下去的，最后基本都可以拿到不错的offer！此外，每周都会进行"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("精华总结和分享！")]),t._v("如果你需要《阿秀的学习笔记》网站中📚︎校招八股文相关知识点的PDF版本的话，可以"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/qs0yn66apvkzw0ps",target:"_blank"}},[t._v("点此下载")]),t._v(" 。")])]),t._v(" "),e("h2",{attrs:{id:"_155-最小栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_155-最小栈"}},[t._v("#")]),t._v(" 155. 最小栈")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/min-stack/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("设计一个支持 push，pop，top 操作，并能在常数时间内检索到最小元素的栈。")]),t._v(" "),e("ul",[e("li",[t._v("push(x) -- 将元素 x 推入栈中。")]),t._v(" "),e("li",[t._v("pop() -- 删除栈顶的元素。")]),t._v(" "),e("li",[t._v("top() -- 获取栈顶元素。")]),t._v(" "),e("li",[t._v("getMin() -- 检索栈中的最小元素。")])]),t._v(" "),e("p",[e("strong",[t._v("示例:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("MinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin();   --\x3e 返回 -3.\nminStack.pop();\nminStack.top();      --\x3e 返回 0.\nminStack.getMin();   --\x3e 返回 -2.\n")])])]),e("h3",{attrs:{id:"第一版-双栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一版-双栈"}},[t._v("#")]),t._v(" 第一版，双栈")]),t._v(" "),e("p",[t._v("执行用时 :64 ms, 在所有 C++ 提交中击败了37.18%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :16.8 MB, 在所有 C++ 提交中击败了77.33%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("class MinStack {\npublic:\n\t/** Initialize your data structure here. */\n\tMinStack() {\n\n\t}\n\n\t/** Push element x to the back of queue. */\n\tvoid push(int x) {\n\n\t\tstVal.push(x);\n\t\tif (stMin.empty() || x < stMin.top()) //双栈，同步保存当前最小值，如果是第一个x或者小于当前最小值，就把新的最小值存储进来\n\t\t\tstMin.push(x);\n\t\telse\n\t\t\tstMin.push(stMin.top());\n\t}\n\n\t/** Removes the element from in front of queue and returns that element. */\n\tvoid pop() {\n\n\t\tstMin.pop();\n\t\tstVal.pop();\n\t}\n\n\t/** Get the front element. */\n\tint top() {\n\n\t\treturn stVal.top();\n\t}\n\n\t/** Returns whether the queue is empty. */\n\tint getMin() {\n\t\treturn stMin.top();\n\t}\n\nprivate:\n\tstack<int> stVal, stMin;\n};\n")])])]),e("h3",{attrs:{id:"第二版-又一个思路-一次push两个进去"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二版-又一个思路-一次push两个进去"}},[t._v("#")]),t._v(" 第二版 ，又一个思路，一次push两个进去")]),t._v(" "),e("p",[t._v("每次push时，第一次push进x，第二次push当前的最小值")]),t._v(" "),e("p",[t._v("执行用时 :64 ms, 在所有 C++ 提交中击败了37.18%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :16.7 MB, 在所有 C++ 提交中击败了93.90%的用户")]),t._v(" "),e("div",{staticClass:"language-C++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("class MinStack {\npublic:\n\t/** Initialize your data structure here. */\n\tMinStack() {\n\t}\n\n\t/** Push element x to the back of queue. */\n\tvoid push(int x) {\n\t\tif (st.empty()) {\n\t\t\tnumMin = x;\n\t\t\tst.push(x);\n\t\t\tst.push(x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnumMin = min(numMin, x);\n\t\t\tst.push(x);\n\t\t\tst.push(numMin);\n\t\t}\n\n\t}\n\n\t/** Removes the element from in front of queue and returns that element. */\n\tvoid pop() {\n\t\tst.pop();\n\t\tst.pop();\n\t\tif(!st.empty()) //注意可能会有st为空的情况，直接写numMin=st.top()会报错，要注意更新最小值\n\t\t\tnumMin = st.top();\n\t}\n\n\t/** Get the front element. */\n\tint top() {\n\t\tint numMinTemp = st.top();//先保存最后的小的值\n\t\tst.pop();\n\t\tnumTemp = st.top();\n\t\tst.push(numMinTemp);\n\t\treturn numTemp; //不能返回局部变量的值以及地址\n\t}\n\n\t/** Returns whether the queue is empty. */\n\tint getMin() {\n\t\treturn st.top();\n\t}\n\nprivate:\n\tstack<int> st = {};\n\tint numMin, numTemp;\n};\n")])])]),e("p",[t._v("几个教训：")]),t._v(" "),e("p",[t._v("1、函数返回时，不能返回局部变量的值以及地址")]),t._v(" "),e("p",[t._v("2、注意边界检查，以及最小值的更新")]),t._v(" "),e("h3",{attrs:{id:"第三版-第二版的变形-但是快很多了"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三版-第二版的变形-但是快很多了"}},[t._v("#")]),t._v(" 第三版 第二版的变形，但是快很多了")]),t._v(" "),e("p",[t._v("执行用时 :36 ms, 在所有 C++ 提交中击败了90.66%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :17 MB, 在所有 C++ 提交中击败了36.11%的用户")]),t._v(" "),e("p",[e("strong",[t._v("先输入最小值，再push当前值，这样get_top(),会快一点")])]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("class MinStack {\npublic:\n\t/** Initialize your data structure here. */\n\tMinStack() {\n\n\t}\n\n\t/** Push element x to the back of queue. */\n\tvoid push(int x) {\n\t\tif (st.empty()) {\n\t\t\tnumMin = x;\n\t\t\tst.push(x);\n\t\t\tst.push(x);\n\t\t}\n\t\telse\n\t\t{\n\n\t\t\tnumMin = min(numMin, x);\n\t\t\tst.push(numMin);\n\t\t\tst.push(x);\n\t\t}\n\n\t}\n\n\t/** Removes the element from in front of queue and returns that element. */\n\tvoid pop() {\n\t\tst.pop();\n\t\tst.pop();\n\t\tif (!st.empty())\n\t\t{\n\t\t\tint numTemp = st.top();\n\t\t\tst.pop();\n\t\t\tnumMin = st.top();\n\t\t\tst.push(numTemp);\n\t\t}\n\t}\n\n\t/** Get the front element. */\n\tint top() {\n\n\t\treturn st.top();\n\t}\n\n\t/** Returns whether the queue is empty. */\n\tint getMin() {\n\t\tint numTempT = st.top();\n\t\tst.pop();\n\t\tnumTemp = st.top();\n\t\tst.push(numTempT);\n\t\treturn numTemp;\n\t}\n\nprivate:\n\tstack<int> st = {};\n\tint numMin, numTemp;\n};\n")])])]),e("p",{attrs:{id:"用队列实现栈"}})])}),[],!1,null,null,null);n.default=a.exports}}]);
