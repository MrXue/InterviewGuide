(window.webpackJsonp=window.webpackJsonp||[]).push([[340],{753:function(t,e,n){"use strict";n.r(e);var r=n(62),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticStyle:{"border-color":"#24C6DC","background-color":"#e9f9f3",margin:"1rem 0",padding:".25rem 1rem","border-left-width":".3rem","border-left-style":"solid","border-radius":".5rem",color:"inherit"}},[n("p",[t._v("这是六则或许对你有些许帮助的信息:")]),t._v(" "),n("p",[t._v("⭐️1、阿秀与朋友合作开发了一个"),n("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("编程资源网站")]),t._v("，目前已经收录了很多不错的学习资源和黑科技（附带下载地址），如过你想要寻求合适的编程资源，"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://tools.interviewguide.cn/home",target:"_blank"}},[t._v("欢迎体验")]),t._v("以及推荐自己认为不错的资源，众人拾柴火焰高，我为人人，人人为我🔥！")]),t._v(" "),n("p",[t._v("2、👉23年5月份阿秀从"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzk0ODU4MzEzMw==&mid=2247512170&idx=1&sn=c4a04a383d2dfdece676b75f17224e78",target:"_blank"}},[t._v("字节跳动离职跳槽到某外企")]),t._v("期间，为"),n("span",{staticStyle:{"font-weight":"bold"}},[t._v("方便自己找工作，增加上岸几率")]),t._v("，我自己从0开发了一个"),n("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("互联网中大厂面试真题解析网站")]),t._v("，包括两个前端和一个后端。能够定向查看某些公司的某些岗位面试真题，比如我想查一下行业为互联网，公司为字节跳动，考察岗位为后端，考察时间为最近一年之类的面试题有哪些？\n")]),n("div",{attrs:{align:"center"}}),t._v("网站地址："),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://top.interviewguide.cn/",target:"_blank"}},[t._v("InterviewGuide大厂面试真题解析网站")]),t._v("。点此可以查看该网站的视频介绍："),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.bilibili.com/video/BV1f94y1C7BL",target:"_blank"}},[t._v("B站视频讲解")]),t._v("   如果可以的话求个B站三连，感谢！\n  "),n("p"),t._v("3、😊\n    分享一个学弟发给我的"),n("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("20T网盘资源合集")]),t._v("，"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://docs.qq.com/sheet/DY3VPVklVaFFMcUZ4?tab=9h5afr",target:"_blank"}},[t._v("点此白嫖")]),t._v("，主要是各类高清影视、电视剧、音乐、副业、纪录片、英语四六级考试、考研考公等资源。\n  "),n("p"),t._v(" "),n("p",[t._v("4、😍免费分享阿秀个人学习计算机以来收集到的免费学习资源，"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/01-free/01-introduce.html",target:"_blank"}},[t._v("点此白嫖")]),t._v("；也记录一下自己以前买过的"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")]),t._v("；也记录一下自己以前买过的"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")])]),t._v(" "),n("p",[t._v("5、🚀如果你想在校招中顺利拿到更好的offer，阿秀建议你多看看前人"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("踩过的坑")]),t._v("和"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{target:"_blank",href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp"}},[t._v("留下的经验")]),t._v("，事实上你现在遇到的大多数问题你的学长学姐师兄师姐基本都已经遇到过了。\n  ")]),t._v(" "),n("p",[t._v("6、🔥 欢迎准备计算机校招的小伙伴加入我的"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/xg0otqvc17wfx4u9",target:"_blank"}},[t._v("学习圈子")]),t._v("，一个人踽踽独行不如一群人报团取暖，圈子里沉淀了很多过去21/22/23届学长学姐的"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp",target:"_blank"}},[t._v("经验和总结")]),t._v("，好好跟着走下去的，最后基本都可以拿到不错的offer！此外，每周都会进行"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("精华总结和分享！")]),t._v("如果你需要《阿秀的学习笔记》网站中📚︎校招八股文相关知识点的PDF版本的话，可以"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/qs0yn66apvkzw0ps",target:"_blank"}},[t._v("点此下载")]),t._v(" 。")])]),t._v(" "),n("p",{attrs:{id:"对称的二叉树"}}),t._v(" "),n("h2",{attrs:{id:"剑指-offer-28-对称的二叉树"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#剑指-offer-28-对称的二叉树"}},[t._v("#")]),t._v(" 剑指 Offer 28. 对称的二叉树")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode-cn.com/problems/dui-cheng-de-er-cha-shu-lcof/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("请实现一个函数，用来判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。")]),t._v(" "),n("p",[t._v("例如，二叉树 [1,2,2,3,4,4,3] 是对称的。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3\n")])])]),n("p",[t._v("但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:")]),t._v(" "),n("div",{staticClass:"language-C++ extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n")])])]),n("p",[n("strong",[t._v("示例 1：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("输入：root = [1,2,2,3,4,4,3]\n输出：true\n")])])]),n("p",[n("strong",[t._v("示例 2：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("输入：root = [1,2,2,null,3,null,3]\n输出：false\n")])])]),n("p",[n("strong",[t._v("限制：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("0 <= 节点个数 <= 1000\n")])])]),n("h3",{attrs:{id:"_1、递归法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、递归法"}},[t._v("#")]),t._v(" 1、递归法")]),t._v(" "),n("p",[t._v("执行用时：12 ms, 在所有 C++ 提交中击败了32.98%的用户")]),t._v(" "),n("p",[t._v("内存消耗：16.3 MB, 在所有 C++ 提交中击败了100.00%的用户")]),t._v(" "),n("div",{staticClass:"language-C++ extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" bool isEqual(TreeNode*node1,TreeNode*node2){\n\n        if(node1==nullptr && node2 ==nullptr)  return true;\n        if(node1==nullptr && node2!=nullptr) return false;\n        if(node2==nullptr && node1!=nullptr) return false;\n        if(node1->val == node2->val) {\n            return isEqual(node1->left,node2->right) && isEqual(node1->right,node2->left);\n\n        }else\n            return false;\n\n    }\n    bool isSymmetric(TreeNode* root) {\n\n        if(root==nullptr) return true;\n        return isEqual(root->left,root->right);\n\n    }\n")])])]),n("h3",{attrs:{id:"_2、递归法、稍微改进一点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、递归法、稍微改进一点"}},[t._v("#")]),t._v(" 2、递归法、稍微改进一点")]),t._v(" "),n("p",[t._v("执行用时：8 ms, 在所有 C++ 提交中击败了67.83%的用户")]),t._v(" "),n("p",[t._v("内存消耗：16.4 MB, 在所有 C++ 提交中击败了100.00%的用户")]),t._v(" "),n("div",{staticClass:"language-C++ extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" bool isEqual(TreeNode*node1,TreeNode*node2){\n\n        if(node1==nullptr && node2 ==nullptr)  return true;\n        if(node1 ==nullptr || node2==nullptr) return false;//减少判断\n        if(node1->val == node2->val) {\n            return isEqual(node1->left,node2->right) && isEqual(node1->right,node2->left);\n\n        }else\n            return false;\n\n    }\n    bool isSymmetric(TreeNode* root) {\n\n        if(root==nullptr) return true;\n        return isEqual(root->left,root->right);\n\n    }\n")])])]),n("h3",{attrs:{id:"_3、迭代法-借助栈-太麻烦了-不值得借鉴"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、迭代法-借助栈-太麻烦了-不值得借鉴"}},[t._v("#")]),t._v(" 3、迭代法，借助栈  太麻烦了，不值得借鉴")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n\n \n")])])]),n("div",{staticClass:"language-C++ extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    bool isSymmetric(TreeNode* root) {\n        if(!root){\n            return true;\n        }\n        queue<TreeNode *> que1;\n        que1.push(root);\n        while(!que1.empty()){\n            int size = que1.size();\n            vector<TreeNode *> tmp;//判断虽然不是镜像节点，但是值依然相等的情况，比如上述情况\n            while(size > 0){\n                TreeNode *fronts = que1.front();\n                que1.pop();\n                tmp.push_back(fronts->left);\n                if(fronts->left){\n                    que1.push(fronts->left);\n                }\n                tmp.push_back(fronts->right);\n                if(fronts->right){\n                    que1.push(fronts->right);\n                }\n                size --;\n            }\n            int i=0;\n            int j=tmp.size()-1;\n            while(i<j){\n                if(tmp[i] != nullptr && tmp[j] != nullptr){\n                    if(tmp[i]->val != tmp[j]->val){\n                        return false;\n                    }\n                }\n                else if(tmp[i] == nullptr && tmp[j] == nullptr){\n                }\n                else{\n                    return false;\n                }\n                i++;\n                j--;\n            }\n        }\n        return true;\n    }\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);
