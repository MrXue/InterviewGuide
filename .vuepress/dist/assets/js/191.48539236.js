(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{605:function(t,n,e){"use strict";e.r(n);var r=e(62),s=Object(r.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticStyle:{"border-color":"#24C6DC","background-color":"#e9f9f3",margin:"1rem 0",padding:".25rem 1rem","border-left-width":".3rem","border-left-style":"solid","border-radius":".5rem",color:"inherit"}},[e("p",[t._v("这是六则或许对你有些许帮助的信息:")]),t._v(" "),e("p",[t._v("⭐️1、阿秀与朋友合作开发了一个"),e("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("编程资源网站")]),t._v("，目前已经收录了很多不错的学习资源和黑科技（附带下载地址），如过你想要寻求合适的编程资源，"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://tools.interviewguide.cn/home",target:"_blank"}},[t._v("欢迎体验")]),t._v("以及推荐自己认为不错的资源，众人拾柴火焰高，我为人人，人人为我🔥！")]),t._v(" "),e("p",[t._v("2、👉23年5月份阿秀从"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzk0ODU4MzEzMw==&mid=2247512170&idx=1&sn=c4a04a383d2dfdece676b75f17224e78",target:"_blank"}},[t._v("字节跳动离职跳槽到某外企")]),t._v("期间，为"),e("span",{staticStyle:{"font-weight":"bold"}},[t._v("方便自己找工作，增加上岸几率")]),t._v("，我自己从0开发了一个"),e("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("互联网中大厂面试真题解析网站")]),t._v("，包括两个前端和一个后端。能够定向查看某些公司的某些岗位面试真题，比如我想查一下行业为互联网，公司为字节跳动，考察岗位为后端，考察时间为最近一年之类的面试题有哪些？\n")]),e("div",{attrs:{align:"center"}}),t._v("网站地址："),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://top.interviewguide.cn/",target:"_blank"}},[t._v("InterviewGuide大厂面试真题解析网站")]),t._v("。点此可以查看该网站的视频介绍："),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.bilibili.com/video/BV1f94y1C7BL",target:"_blank"}},[t._v("B站视频讲解")]),t._v("   如果可以的话求个B站三连，感谢！\n  "),e("p"),t._v("3、😊\n    分享一个学弟发给我的"),e("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("20T网盘资源合集")]),t._v("，"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://docs.qq.com/sheet/DY3VPVklVaFFMcUZ4?tab=9h5afr",target:"_blank"}},[t._v("点此白嫖")]),t._v("，主要是各类高清影视、电视剧、音乐、副业、纪录片、英语四六级考试、考研考公等资源。\n  "),e("p"),t._v(" "),e("p",[t._v("4、😍免费分享阿秀个人学习计算机以来收集到的免费学习资源，"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/01-free/01-introduce.html",target:"_blank"}},[t._v("点此白嫖")]),t._v("；也记录一下自己以前买过的"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")]),t._v("；也记录一下自己以前买过的"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")])]),t._v(" "),e("p",[t._v("5、🚀如果你想在校招中顺利拿到更好的offer，阿秀建议你多看看前人"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("踩过的坑")]),t._v("和"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{target:"_blank",href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp"}},[t._v("留下的经验")]),t._v("，事实上你现在遇到的大多数问题你的学长学姐师兄师姐基本都已经遇到过了。\n  ")]),t._v(" "),e("p",[t._v("6、🔥 欢迎准备计算机校招的小伙伴加入我的"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/xg0otqvc17wfx4u9",target:"_blank"}},[t._v("学习圈子")]),t._v("，一个人踽踽独行不如一群人报团取暖，圈子里沉淀了很多过去21/22/23届学长学姐的"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp",target:"_blank"}},[t._v("经验和总结")]),t._v("，好好跟着走下去的，最后基本都可以拿到不错的offer！此外，每周都会进行"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("精华总结和分享！")]),t._v("如果你需要《阿秀的学习笔记》网站中📚︎校招八股文相关知识点的PDF版本的话，可以"),e("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/qs0yn66apvkzw0ps",target:"_blank"}},[t._v("点此下载")]),t._v(" 。")])]),t._v(" "),e("h2",{attrs:{id:"_599-两个列表的最小索引总和"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_599-两个列表的最小索引总和"}},[t._v("#")]),t._v(" 599. 两个列表的最小索引总和")]),t._v(" "),e("p",[t._v("假设Andy和Doris想在晚餐时选择一家餐厅，并且他们都有一个表示最喜爱餐厅的列表，每个餐厅的名字用字符串表示。")]),t._v(" "),e("p",[t._v("你需要帮助他们用最少的索引和找出他们共同喜爱的餐厅。 如果答案不止一个，则输出所有答案并且不考虑顺序。 你可以假设总是存在一个答案。")]),t._v(" "),e("p",[t._v("示例 1:")]),t._v(" "),e("p",[t._v('输入:\n["Shogun", "Tapioca Express", "Burger King", "KFC"]\n["Piatti", "The Grill at Torrey Pines", "Hungry Hunter Steakhouse", "Shogun"]\n输出: ["Shogun"]\n解释: 他们唯一共同喜爱的餐厅是“Shogun”。\n示例 2:')]),t._v(" "),e("p",[t._v('输入:\n["Shogun", "Tapioca Express", "Burger King", "KFC"]\n["KFC", "Shogun", "Burger King"]\n输出: ["Shogun"]\n解释: 他们共同喜爱且具有最小索引和的餐厅是“Shogun”，它有最小的索引和1(0+1)。\n提示:')]),t._v(" "),e("p",[t._v("两个列表的长度范围都在 [1, 1000]内。\n两个列表中的字符串的长度将在[1，30]的范围内。\n下标从0开始，到列表的长度减1。\n两个列表都没有重复的元素。")]),t._v(" "),e("h3",{attrs:{id:"第一版-自己写的-速度快-内存较大"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一版-自己写的-速度快-内存较大"}},[t._v("#")]),t._v(" 第一版，自己写的，速度快，内存较大")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {\n    unordered_map<string, pair<int, int>> res;//餐厅名 索引号相加 ,出现次数\n\tint minIndex = INT_MAX;\n\t\n\tmultimap<int,string> result;\n\tfor (unsigned i = 0; i < list1.size(); ++i) {\n\t\tres[list1[i]] = { i,1 };\n\t}\n\n\tfor (unsigned i = 0; i < list2.size(); ++i) {\n\t\t\n\t\tres[list2[i]].first += i;\n\t\tres[list2[i]].second += 1;\n\t}\n\n\tfor (auto &a : res) {\n\n\t\tif (a.second.second == 2) {\t\n\t\t\tminIndex = a.second.first < minIndex ? a.second.first : minIndex;\n\t\t\tresult.insert({ a.second.first, a.first});\n\t\t}\n\t}\n\n\tmultimap<int, string>::iterator beg, end;\n\tbeg  = result.equal_range(minIndex).first;\n\tend = result.equal_range(minIndex).second;\n\n\n\n\tvector<string> r;\n\twhile (beg != end) {\n\t\tr.push_back(beg->second);\n\t\tbeg++;\n\t}\n\t\n\treturn r;\n        \n    }\n")])])]),e("h3",{attrs:{id:"第二版-换了一个写法-反而更差了"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二版-换了一个写法-反而更差了"}},[t._v("#")]),t._v(" 第二版，换了一个写法，反而更差了...")]),t._v(" "),e("p",[t._v("执行用时 :188 ms, 在所有 cpp 提交中击败了40.00%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :32.3 MB, 在所有 cpp 提交中击败了14.21%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {\n\tunordered_map<string, pair<int, int>> res;//餐厅名 索引号相加 ,出现次数\n\tint minIndex;\n\tvector<string> result;\n\tfor (unsigned i = 0; i < list1.size(); ++i) {\n\t\tres[list1[i]] = { i,1 };\n\t}\n\n\tfor (unsigned i = 0; i < list2.size(); ++i) {\n\t\t\n\t\tres[list2[i]].first += i;\n\t\tres[list2[i]].second += 1;\n\t}\n\n\tfor (auto &a : res) {\n\t\tif (a.second.second == 2) {\t\n\n\t\t\tif (result.empty()) {//第一次为空直接进\n\t\t\t\tminIndex = a.second.first;\n\t\t\t\tresult.push_back(a.first);\n\t\t\t}\n\t\t\telse//不为空，与上一次最小值进行比较\n\t\t\t{\n\t\t\t\tif (a.second.first < minIndex) //当前最小值是最小的，进行更替\n\t\t\t\t{\n\t\t\t\t\tresult.clear();//清空结果\n\t\t\t\t\tminIndex = a.second.first;\n\t\t\t\t\tresult.push_back(a.first);\n\t\t\t\t}\n\t\t\t\telse if (a.second.first == minIndex)//和当前一样大，就直接进去\n\t\t\t\t{\n\t\t\t\t\tresult.push_back(a.first);\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\n\treturn result;\n    }\n")])])]),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n")])])]),e("h3",{attrs:{id:"第三版-再换一个写法。。。还是第一版最快"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三版-再换一个写法。。。还是第一版最快"}},[t._v("#")]),t._v(" 第三版，再换一个写法。。。还是第一版最快")]),t._v(" "),e("p",[t._v("执行用时 :180 ms, 在所有 cpp 提交中击败了44.26%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :32.2 MB, 在所有 cpp 提交中击败了14.74%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {\n\tunordered_map<string, pair<int, int>> res;//餐厅名 索引号相加 ,出现次数\n\tint minIndex;\n\tvector<string> result;\n\tfor (unsigned i = 0; i < list1.size(); ++i) {\n\t\tres[list1[i]] = { i,1 };\n\t}\n\n\tfor (unsigned i = 0; i < list2.size(); ++i) {\n\t\t\n\t\tres[list2[i]].first += i;\n\t\tres[list2[i]].second += 1;\n\t\tif (res[list2[i]].second == 2)\n\t\t{\n\t\t\tif (result.empty()) {//第一次为空直接进\n\t\t\t\tminIndex = res[list2[i]].first;\n\t\t\t\tresult.push_back(list2[i]);\n\t\t\t}\n\t\t\telse//不为空，与上一次最小值进行比较\n\t\t\t{\n\t\t\t\tif (res[list2[i]].first < minIndex) //当前最小值是最小的，进行更替\n\t\t\t\t{\n\t\t\t\t\tresult.clear();//清空结果\n\t\t\t\t\tminIndex = res[list2[i]].first;\n\t\t\t\t\tresult.push_back(list2[i]);\n\t\t\t\t}\n\t\t\t\telse if (res[list2[i]].first == minIndex)//和当前一样大，就直接进去\n\t\t\t\t{\n\t\t\t\t\tresult.push_back(list2[i]);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t}\n\n\treturn result;\n}\n")])])]),e("p",{attrs:{id:"错误的集合"}})])}),[],!1,null,null,null);n.default=s.exports}}]);
