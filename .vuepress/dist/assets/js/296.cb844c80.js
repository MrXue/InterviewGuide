(window.webpackJsonp=window.webpackJsonp||[]).push([[296],{710:function(t,e,n){"use strict";n.r(e);var a=n(62),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticStyle:{"border-color":"#24C6DC","background-color":"#e9f9f3",margin:"1rem 0",padding:".25rem 1rem","border-left-width":".3rem","border-left-style":"solid","border-radius":".5rem",color:"inherit"}},[n("p",[t._v("这是六则或许对你有些许帮助的信息:")]),t._v(" "),n("p",[t._v("⭐️1、阿秀与朋友合作开发了一个"),n("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("编程资源网站")]),t._v("，目前已经收录了很多不错的学习资源和黑科技（附带下载地址），如过你想要寻求合适的编程资源，"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://tools.interviewguide.cn/home",target:"_blank"}},[t._v("欢迎体验")]),t._v("以及推荐自己认为不错的资源，众人拾柴火焰高，我为人人，人人为我🔥！")]),t._v(" "),n("p",[t._v("2、👉23年5月份阿秀从"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzk0ODU4MzEzMw==&mid=2247512170&idx=1&sn=c4a04a383d2dfdece676b75f17224e78",target:"_blank"}},[t._v("字节跳动离职跳槽到某外企")]),t._v("期间，为"),n("span",{staticStyle:{"font-weight":"bold"}},[t._v("方便自己找工作，增加上岸几率")]),t._v("，我自己从0开发了一个"),n("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("互联网中大厂面试真题解析网站")]),t._v("，包括两个前端和一个后端。能够定向查看某些公司的某些岗位面试真题，比如我想查一下行业为互联网，公司为字节跳动，考察岗位为后端，考察时间为最近一年之类的面试题有哪些？\n")]),n("div",{attrs:{align:"center"}}),t._v("网站地址："),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://top.interviewguide.cn/",target:"_blank"}},[t._v("InterviewGuide大厂面试真题解析网站")]),t._v("。点此可以查看该网站的视频介绍："),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.bilibili.com/video/BV1f94y1C7BL",target:"_blank"}},[t._v("B站视频讲解")]),t._v("   如果可以的话求个B站三连，感谢！\n  "),n("p"),t._v("3、😊\n    分享一个学弟发给我的"),n("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("20T网盘资源合集")]),t._v("，"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://docs.qq.com/sheet/DY3VPVklVaFFMcUZ4?tab=9h5afr",target:"_blank"}},[t._v("点此白嫖")]),t._v("，主要是各类高清影视、电视剧、音乐、副业、纪录片、英语四六级考试、考研考公等资源。\n  "),n("p"),t._v(" "),n("p",[t._v("4、😍免费分享阿秀个人学习计算机以来收集到的免费学习资源，"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/01-free/01-introduce.html",target:"_blank"}},[t._v("点此白嫖")]),t._v("；也记录一下自己以前买过的"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")]),t._v("；也记录一下自己以前买过的"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"/notes/07-resources/02-precious.html",target:"_blank"}},[t._v("不错的计算机书籍、网络专栏和垃圾付费专栏")])]),t._v(" "),n("p",[t._v("5、🚀如果你想在校招中顺利拿到更好的offer，阿秀建议你多看看前人"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("踩过的坑")]),t._v("和"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{target:"_blank",href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp"}},[t._v("留下的经验")]),t._v("，事实上你现在遇到的大多数问题你的学长学姐师兄师姐基本都已经遇到过了。\n  ")]),t._v(" "),n("p",[t._v("6、🔥 欢迎准备计算机校招的小伙伴加入我的"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/xg0otqvc17wfx4u9",target:"_blank"}},[t._v("学习圈子")]),t._v("，一个人踽踽独行不如一群人报团取暖，圈子里沉淀了很多过去21/22/23届学长学姐的"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/gge9ppd0mbu2d3dp",target:"_blank"}},[t._v("经验和总结")]),t._v("，好好跟着走下去的，最后基本都可以拿到不错的offer！此外，每周都会进行"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/npg1k81zeq4wfpyz",target:"_blank"}},[t._v("精华总结和分享！")]),t._v("如果你需要《阿秀的学习笔记》网站中📚︎校招八股文相关知识点的PDF版本的话，可以"),n("a",{staticStyle:{"text-decoration":"underline"},attrs:{href:"https://www.yuque.com/tuobaaxiu/httmmc/qs0yn66apvkzw0ps",target:"_blank"}},[t._v("点此下载")]),t._v(" 。")])]),t._v(" "),n("h2",{attrs:{id:"_32-最长有效括号-这个真的难"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_32-最长有效括号-这个真的难"}},[t._v("#")]),t._v(" 32. 最长有效括号 这个真的难")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-valid-parentheses/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("https://mp.weixin.qq.com/s/ONRJviXVqmKimchyZLeJjg")]),t._v(" "),n("p",[t._v("给定一个只包含 "),n("code",[t._v("'('")]),t._v(" 和 "),n("code",[t._v("')'")]),t._v(" 的字符串，找出最长的包含有效括号的子串的长度。")]),t._v(" "),n("p",[n("strong",[t._v("示例 1:")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('输入: "(()"\n输出: 2\n解释: 最长有效括号子串为 "()"\n')])])]),n("p",[n("strong",[t._v("示例 2:")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('输入: ")()())"\n输出: 4\n解释: 最长有效括号子串为 "()()"\n')])])]),n("h3",{attrs:{id:"第一版-自己写的-完全错误-没有意识到这是个dp问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一版-自己写的-完全错误-没有意识到这是个dp问题"}},[t._v("#")]),t._v(" 第一版，自己写的，完全错误，没有意识到这是个DP问题")]),t._v(" "),n("p",[n("strong",[t._v('"()(()"')])]),t._v(" "),n("p",[n("strong",[t._v("4")])]),t._v(" "),n("p",[n("strong",[t._v("2")])]),t._v(" "),n("div",{staticClass:"language-c++ extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    int longestValidParentheses(string s) {\n    stack<char> res;\n\tint cut = 0;\n\tfor (auto& a : s) {\n\t\tif (res.empty() || a == '(') res.push(a);\n\t\telse if (a == ')') {\n\t\t\tif (res.top() == '(') {\n\t\t\t\tcut++;\n\t\t\t\tres.pop();\n\t\t\t}\n\t\t}\n\n\n\t}\n\n\treturn 2 * cut;\n        \n    }\n")])])]),n("p",[t._v("我这样的算法相当于计算s中有多少个匹配的括号，并没有想到序列问题")]),t._v(" "),n("h3",{attrs:{id:"第二种栈的解法-其实更慢一点了"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二种栈的解法-其实更慢一点了"}},[t._v("#")]),t._v(" 第二种栈的解法，其实更慢一点了")]),t._v(" "),n("p",[t._v("执行用时 :12 ms, 在所有 cpp 提交中击败了40.53%的用户")]),t._v(" "),n("p",[t._v("内存消耗 :11.7 MB, 在所有 cpp 提交中击败了5.54%的用户")]),t._v(" "),n("p",[t._v("对于这种括号匹配问题，一般都是使用栈")]),t._v(" "),n("p",[t._v("我们先找到所有可以匹配的索引号，然后找出最长连续数列！")]),t._v(" "),n("p",[t._v("例如：s = )(()())，我们用栈可以找到，")]),t._v(" "),n("p",[t._v("位置 2 和位置 3 匹配，")]),t._v(" "),n("p",[t._v("位置 4 和位置 5 匹配，")]),t._v(" "),n("p",[t._v("位置 1 和位置 6 匹配，")]),t._v(" "),n("p",[t._v("这个数组为：2,3,4,5,1,6 这是通过栈找到的，我们按递增排序！1,2,3,4,5,6")]),t._v(" "),n("p",[t._v("找出该数组的最长连续数列的长度就是最长有效括号长度！")]),t._v(" "),n("p",[t._v("所以时间复杂度来自排序：O(nlogn)")]),t._v(" "),n("div",{staticClass:"language-c++ extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("int longestValidParentheses(string s) { //   ())(())\n\n\tstack<int> res;\n\tvector<int> num;\n\tint len = s.size(),maxNum=0;\n\tfor (int i = 0; i < len; ++i) {\n\t\t\n\t\tif (s[i] == '(') {\n\t\t\t//下标入栈\n\t\t\tres.push(i);\n\t\t}\n\t\telse {\t\t\n\t\t\t// 出栈\n\t\t\tif (res.empty()) {\n\t\t\t\tres.push(i);\n\t\t\t}\n\t\t\telse if(s[res.top()]=='('){ //这一步很重要\n\t\t\t\tnum.push_back(res.top());\n\t\t\t\tres.pop();\n\t\t\t\tnum.push_back(i);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//for (auto& a : num) {\n\t//\tcout << a<<endl;\n\t//}\n\n\tsort(num.begin(), num.end());\n\n\t//for (auto& a : num) {\n\t//\tcout << a << endl;\n\t//}\n\n\tstack<int>().swap(res);\n\tfor (auto& a : num) {\n\t\tif (res.empty())\n\t\t\tres.push(a);\n\t\telse if (a - res.top() == 1) {\n\t\t\tres.push(a);\n\t\t}\n\t\telse {\n\n\t\t\tmaxNum = max(maxNum, static_cast<int>(res.size()));\n\t\t\tstack<int>().swap(res);\n\t\t\tres.push(a);\n\t\t}\n\t}\n\tmaxNum = max(maxNum, static_cast<int>(res.size()));\n\n\treturn maxNum;\n}\n")])])]),n("h3",{attrs:{id:"第三版本-用变量代替栈的一个解法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第三版本-用变量代替栈的一个解法"}},[t._v("#")]),t._v(" 第三版本，用变量代替栈的一个解法")]),t._v(" "),n("p",[t._v("用变量来代替栈来优化，不过这个时候我们需要两个变量，我们假设变量为 left 和 right。")]),t._v(" "),n("p",[t._v("我们在从从左到右遍历字符串的过程中，用 left 记录 '(' 的数量，用 right 记录 ')' 的数量。并且在遍历的过程中：")]),t._v(" "),n("p",[t._v("1、如果 left >= right，显然这个时候 right 个 ')' 都将一定能够得到匹配。所以当前的有效括号长度为 2 * right。然后更新 max。")]),t._v(" "),n("p",[t._v("2、如果 left < right，显然这个时候部分 ')' 一定得不到匹配，此时我们把 left 和 right 都置为 0。")]),t._v(" "),n("p",[t._v("**当遍历完字符串，我们是否就得到最大长度的有效括号了呢？**大家可以想一下")]),t._v(" "),n("p",[t._v("答是不可以的，我们还需要"),n("strong",[t._v("从右到左")]),t._v("遍历计算一下。")]),t._v(" "),n("p",[n("strong",[t._v("为什么呢？")])]),t._v(" "),n("p",[t._v("因为实际上 '(' 和 ')' 其实是等价的，为什么就不可以倒过来遍历计算呢？所以，千万别忽略了哈。")]),t._v(" "),n("p",[t._v("执行用时 :4 ms, 在所有 cpp 提交中击败了96.32%的用户")]),t._v(" "),n("p",[t._v("内存消耗 :9 MB, 在所有 cpp 提交中击败了98.50%的用户")]),t._v(" "),n("div",{staticClass:"language-c++ extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("int longestValidParentheses(string s) { //   ())(())\n\n\tint left = 0, right = 0, maxNum = 0;\n\t// 从左到右\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == '(') {\n\t\t\tleft++;\n\t\t}\n\t\telse {\n\t\t\tright++;\n\t\t}\n\t\tif (left == right) {\n\t\t\tmaxNum = max(maxNum, 2 * right);\n\t\t}\n\t\telse if (right > left) {\n\t\t\tleft = right = 0;\n\t\t}\n\t}\n\tleft = right = 0;\n\t// 从右到左\n\tfor (int i = s.length() - 1; i >= 0; i--) {\n\t\tif (s[i] == '(') {\n\t\t\tleft++;\n\t\t}\n\t\telse {\n\t\t\tright++;\n\t\t}\n\t\tif (left == right) {\n\t\t\tmaxNum =max(maxNum, 2 * left);\n\t\t}\n\t\telse if (left > right) {\n\t\t\tleft = right = 0;\n\t\t}\n\t}\n\treturn maxNum;\n}\n\n")])])]),n("p",[t._v("这个问题可以通过动态规划解决。我们定义一个 \\text{dp}dp 数组，其中第 ii 个元素表示以下标为 ii 的字符结尾的最长有效子字符串的长度。我们将 \\text{dp}dp 数组全部初始化为 0 。现在，很明显有效的子字符串一定以 \\text{‘)’}‘)’ 结尾。这进一步可以得出结论：以 \\text{‘(’}‘(’ 结尾的子字符串对应的 \\text{dp}dp 数组位置上的值必定为 0 。所以说我们只需要更新 \\text{‘)’}‘)’ 在 \\text{dp}dp 数组中对应位置的值。")]),t._v(" "),n("p",{attrs:{id:"鸡蛋掉落"}})])}),[],!1,null,null,null);e.default=r.exports}}]);
